-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Dummy/Par.y
-----------------------------------------------------------------------------

state 8 contains 1 reduce/reduce conflicts.
state 21 contains 1 shift/reduce conflicts.
state 25 contains 1 reduce/reduce conflicts.
state 50 contains 1 shift/reduce conflicts.
state 53 contains 1 shift/reduce conflicts.
state 56 contains 2 reduce/reduce conflicts.
state 75 contains 1 reduce/reduce conflicts.
state 77 contains 1 reduce/reduce conflicts.
state 78 contains 2 reduce/reduce conflicts.
state 84 contains 6 shift/reduce conflicts.
state 95 contains 1 shift/reduce conflicts.
state 100 contains 1 shift/reduce conflicts.
state 102 contains 2 reduce/reduce conflicts.
state 111 contains 1 shift/reduce conflicts.
state 113 contains 6 shift/reduce conflicts.
state 123 contains 1 shift/reduce conflicts.
state 124 contains 1 shift/reduce conflicts.

rule 38 is unused
rule 39 is unused
rule 40 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pListClassDec -> ListClassDec               (1)
	%start_pListInstDec -> ListInstDec                 (2)
	%start_pListDefn -> ListDefn                       (3)
	%start_pClassOpDec -> ClassOpDec                   (4)
	%start_pClassOpImp -> ClassOpImp                   (5)
	%start_pClassDec -> ClassDec                       (6)
	%start_pInstDec -> InstDec                         (7)
	%start_pListTyC -> ListTyC                         (8)
	%start_pListClassOpDec -> ListClassOpDec           (9)
	%start_pListClassOpImp -> ListClassOpImp           (10)
	%start_pDefn -> Defn                               (11)
	%start_pExpr -> Expr                               (12)
	%start_pExpr1 -> Expr1                             (13)
	%start_pListExpr -> ListExpr                       (14)
	%start_pTyC -> TyC                                 (15)
	%start_pOvType -> OvType                           (16)
	%start_pSType -> SType                             (17)
	%start_pDType -> DType                             (18)
	Integer -> L_integ                                 (19)
	String -> L_quoted                                 (20)
	True -> L_True                                     (21)
	False -> L_False                                   (22)
	Prog -> ListClassDec ListInstDec ListDefn          (23)
	ListClassDec ->                                    (24)
	ListClassDec -> ClassDec                           (25)
	ListClassDec -> ClassDec ';' ListClassDec          (26)
	ListInstDec ->                                     (27)
	ListInstDec -> InstDec                             (28)
	ListInstDec -> InstDec ';' ListInstDec             (29)
	ListDefn ->                                        (30)
	ListDefn -> Defn                                   (31)
	ListDefn -> Defn ';' ListDefn                      (32)
	ClassOpDec -> String ':' SType                     (33)
	ClassOpImp -> String '=' Expr                      (34)
	ClassDec -> 'class' '<' ListTyC '>' '=>' String String 'where' ListClassOpDec   (35)
	InstDec -> 'instance' String SType 'where' ListClassOpImp   (36)
	InstDec -> 'instance' '<' ListTyC '>' '=>' String SType 'where' ListClassOpImp   (37)
	ListTyC ->                                         (38)
	ListTyC -> TyC                                     (39)
	ListTyC -> TyC ',' ListTyC                         (40)
	ListTyC ->                                         (41)
	ListTyC -> TyC                                     (42)
	ListTyC -> TyC ',' ListTyC                         (43)
	ListClassOpDec ->                                  (44)
	ListClassOpDec -> ClassOpDec ListClassOpDec        (45)
	ListClassOpImp ->                                  (46)
	ListClassOpImp -> ClassOpImp ListClassOpImp        (47)
	Defn -> String '=' Expr                            (48)
	Expr -> '\\' String '->' Expr                      (49)
	Expr -> Expr Expr                                  (50)
	Expr -> True                                       (51)
	Expr -> False                                      (52)
	Expr -> String                                     (53)
	Expr -> '[' ListExpr ']'                           (54)
	Expr -> Integer                                    (55)
	Expr1 -> String                                    (56)
	ListExpr ->                                        (57)
	ListExpr -> Expr                                   (58)
	ListExpr -> Expr ',' ListExpr                      (59)
	TyC -> String SType                                (60)
	OvType -> '<' ListTyC '>' '=>' SType               (61)
	SType -> String                                    (62)
	SType -> String String                             (63)
	SType -> 'Bool'                                    (64)
	SType -> SType '->' SType                          (65)
	SType -> '[' SType ']'                             (66)
	SType -> 'Integer'                                 (67)
	DType -> OvType                                    (68)
	DType -> SType                                     (69)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	','            { PT _ (TS _ 1) }
	'->'           { PT _ (TS _ 2) }
	':'            { PT _ (TS _ 3) }
	';'            { PT _ (TS _ 4) }
	'<'            { PT _ (TS _ 5) }
	'='            { PT _ (TS _ 6) }
	'=>'           { PT _ (TS _ 7) }
	'>'            { PT _ (TS _ 8) }
	'Bool'         { PT _ (TS _ 9) }
	'Integer'      { PT _ (TS _ 10) }
	'['            { PT _ (TS _ 11) }
	'\\'           { PT _ (TS _ 12) }
	']'            { PT _ (TS _ 13) }
	'class'        { PT _ (TS _ 14) }
	'instance'     { PT _ (TS _ 15) }
	'where'        { PT _ (TS _ 16) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_True         { PT _ (T_True $$) }
	L_False        { PT _ (T_False $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pListClassDec rule  1
	%start_pListInstDec rule  2
	%start_pListDefn rule  3
	%start_pClassOpDec rule  4
	%start_pClassOpImp rule  5
	%start_pClassDec rule  6
	%start_pInstDec rule  7
	%start_pListTyC rule  8
	%start_pListClassOpDec rule  9
	%start_pListClassOpImp rule  10
	%start_pDefn    rule  11
	%start_pExpr    rule  12
	%start_pExpr1   rule  13
	%start_pListExpr rule  14
	%start_pTyC     rule  15
	%start_pOvType  rule  16
	%start_pSType   rule  17
	%start_pDType   rule  18
	Integer         rule  19
	String          rule  20
	True            rule  21
	False           rule  22
	Prog            rule  23
	ListClassDec    rules 24, 25, 26
	ListInstDec     rules 27, 28, 29
	ListDefn        rules 30, 31, 32
	ClassOpDec      rule  33
	ClassOpImp      rule  34
	ClassDec        rule  35
	InstDec         rules 36, 37
	ListTyC         rules 38, 39, 40, 41, 42, 43
	ListClassOpDec  rules 44, 45
	ListClassOpImp  rules 46, 47
	Defn            rule  48
	Expr            rules 49, 50, 51, 52, 53, 54, 55
	Expr1           rule  56
	ListExpr        rules 57, 58, 59
	TyC             rule  60
	OvType          rule  61
	SType           rules 62, 63, 64, 65, 66, 67
	DType           rules 68, 69

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProg -> . Prog                              (rule 0)

	'class'        shift, and enter state 60
	'instance'     reduce using rule 24
	L_quoted       reduce using rule 24
	%eof           reduce using rule 24

	Prog           goto state 69
	ListClassDec   goto state 70
	ClassDec       goto state 68

State 1

	%start_pListClassDec -> . ListClassDec              (rule 1)

	'class'        shift, and enter state 60
	%eof           reduce using rule 24

	ListClassDec   goto state 67
	ClassDec       goto state 68

State 2

	%start_pListInstDec -> . ListInstDec                (rule 2)

	'instance'     shift, and enter state 58
	%eof           reduce using rule 27

	ListInstDec    goto state 65
	InstDec        goto state 66

State 3

	%start_pListDefn -> . ListDefn                      (rule 3)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 30

	String         goto state 47
	ListDefn       goto state 63
	Defn           goto state 64

State 4

	%start_pClassOpDec -> . ClassOpDec                  (rule 4)

	L_quoted       shift, and enter state 29

	String         goto state 52
	ClassOpDec     goto state 62

State 5

	%start_pClassOpImp -> . ClassOpImp                  (rule 5)

	L_quoted       shift, and enter state 29

	String         goto state 49
	ClassOpImp     goto state 61

State 6

	%start_pClassDec -> . ClassDec                      (rule 6)

	'class'        shift, and enter state 60

	ClassDec       goto state 59

State 7

	%start_pInstDec -> . InstDec                        (rule 7)

	'instance'     shift, and enter state 58

	InstDec        goto state 57

State 8

	%start_pListTyC -> . ListTyC                        (rule 8)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 41
			(reduce using rule 38)


	String         goto state 32
	ListTyC        goto state 55
	TyC            goto state 56

State 9

	%start_pListClassOpDec -> . ListClassOpDec          (rule 9)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 44

	String         goto state 52
	ClassOpDec     goto state 53
	ListClassOpDec goto state 54

State 10

	%start_pListClassOpImp -> . ListClassOpImp          (rule 10)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 46

	String         goto state 49
	ClassOpImp     goto state 50
	ListClassOpImp goto state 51

State 11

	%start_pDefn -> . Defn                              (rule 11)

	L_quoted       shift, and enter state 29

	String         goto state 47
	Defn           goto state 48

State 12

	%start_pExpr -> . Expr                              (rule 12)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 46

State 13

	%start_pExpr1 -> . Expr1                            (rule 13)

	L_quoted       shift, and enter state 29

	String         goto state 44
	Expr1          goto state 45

State 14

	%start_pListExpr -> . ListExpr                      (rule 14)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43
	%eof           reduce using rule 57

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 38
	ListExpr       goto state 39

State 15

	%start_pTyC -> . TyC                                (rule 15)

	L_quoted       shift, and enter state 29

	String         goto state 32
	TyC            goto state 33

State 16

	%start_pOvType -> . OvType                          (rule 16)

	'<'            shift, and enter state 25

	OvType         goto state 31

State 17

	%start_pSType -> . SType                            (rule 17)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 30

State 18

	%start_pDType -> . DType                            (rule 18)

	'<'            shift, and enter state 25
	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	OvType         goto state 22
	SType          goto state 23
	DType          goto state 24

State 19

	Integer -> . L_integ                                (rule 19)

	L_integ        shift, and enter state 20


State 20

	Integer -> L_integ .                                (rule 19)

	','            reduce using rule 19
	';'            reduce using rule 19
	'['            reduce using rule 19
	'\\'           reduce using rule 19
	']'            reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	L_True         reduce using rule 19
	L_False        reduce using rule 19
	%eof           reduce using rule 19


State 21

	SType -> String .                                   (rule 62)
	SType -> String . String                            (rule 63)

	','            reduce using rule 62
	'->'           reduce using rule 62
	';'            reduce using rule 62
	'>'            reduce using rule 62
	']'            reduce using rule 62
	'instance'     reduce using rule 62
	'where'        reduce using rule 62
	L_quoted       shift, and enter state 29
			(reduce using rule 62)

	%eof           reduce using rule 62

	String         goto state 92

State 22

	DType -> OvType .                                   (rule 68)

	%eof           reduce using rule 68


State 23

	SType -> SType . '->' SType                         (rule 65)
	DType -> SType .                                    (rule 69)

	'->'           shift, and enter state 89
	%eof           reduce using rule 69


State 24

	%start_pDType -> DType .                            (rule 18)

	%eof           accept


State 25

	OvType -> '<' . ListTyC '>' '=>' SType              (rule 61)

	'>'            reduce using rule 41
			(reduce using rule 38)

	L_quoted       shift, and enter state 29

	String         goto state 32
	ListTyC        goto state 91
	TyC            goto state 56

State 26

	SType -> 'Bool' .                                   (rule 64)

	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'>'            reduce using rule 64
	']'            reduce using rule 64
	'instance'     reduce using rule 64
	'where'        reduce using rule 64
	L_quoted       reduce using rule 64
	%eof           reduce using rule 64


State 27

	SType -> 'Integer' .                                (rule 67)

	','            reduce using rule 67
	'->'           reduce using rule 67
	';'            reduce using rule 67
	'>'            reduce using rule 67
	']'            reduce using rule 67
	'instance'     reduce using rule 67
	'where'        reduce using rule 67
	L_quoted       reduce using rule 67
	%eof           reduce using rule 67


State 28

	SType -> '[' . SType ']'                            (rule 66)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 90

State 29

	String -> L_quoted .                                (rule 20)

	','            reduce using rule 20
	'->'           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'>'            reduce using rule 20
	'Bool'         reduce using rule 20
	'Integer'      reduce using rule 20
	'['            reduce using rule 20
	'\\'           reduce using rule 20
	']'            reduce using rule 20
	'instance'     reduce using rule 20
	'where'        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	L_True         reduce using rule 20
	L_False        reduce using rule 20
	%eof           reduce using rule 20


State 30

	%start_pSType -> SType .                            (rule 17)
	SType -> SType . '->' SType                         (rule 65)

	'->'           shift, and enter state 89
	%eof           accept


State 31

	%start_pOvType -> OvType .                          (rule 16)

	%eof           accept


State 32

	TyC -> String . SType                               (rule 60)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 88

State 33

	%start_pTyC -> TyC .                                (rule 15)

	%eof           accept


State 34

	Expr -> Integer .                                   (rule 55)

	','            reduce using rule 55
	';'            reduce using rule 55
	'['            reduce using rule 55
	'\\'           reduce using rule 55
	']'            reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55
	L_True         reduce using rule 55
	L_False        reduce using rule 55
	%eof           reduce using rule 55


State 35

	Expr -> String .                                    (rule 53)

	','            reduce using rule 53
	';'            reduce using rule 53
	'['            reduce using rule 53
	'\\'           reduce using rule 53
	']'            reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53
	L_True         reduce using rule 53
	L_False        reduce using rule 53
	%eof           reduce using rule 53


State 36

	Expr -> True .                                      (rule 51)

	','            reduce using rule 51
	';'            reduce using rule 51
	'['            reduce using rule 51
	'\\'           reduce using rule 51
	']'            reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51
	L_True         reduce using rule 51
	L_False        reduce using rule 51
	%eof           reduce using rule 51


State 37

	Expr -> False .                                     (rule 52)

	','            reduce using rule 52
	';'            reduce using rule 52
	'['            reduce using rule 52
	'\\'           reduce using rule 52
	']'            reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52
	L_True         reduce using rule 52
	L_False        reduce using rule 52
	%eof           reduce using rule 52


State 38

	Expr -> Expr . Expr                                 (rule 50)
	ListExpr -> Expr .                                  (rule 58)
	ListExpr -> Expr . ',' ListExpr                     (rule 59)

	','            shift, and enter state 87
	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	']'            reduce using rule 58
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43
	%eof           reduce using rule 58

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 84

State 39

	%start_pListExpr -> ListExpr .                      (rule 14)

	%eof           accept


State 40

	Expr -> '[' . ListExpr ']'                          (rule 54)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	']'            reduce using rule 57
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 38
	ListExpr       goto state 86

State 41

	Expr -> '\\' . String '->' Expr                     (rule 49)

	L_quoted       shift, and enter state 29

	String         goto state 85

State 42

	True -> L_True .                                    (rule 21)

	','            reduce using rule 21
	';'            reduce using rule 21
	'['            reduce using rule 21
	'\\'           reduce using rule 21
	']'            reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	L_True         reduce using rule 21
	L_False        reduce using rule 21
	%eof           reduce using rule 21


State 43

	False -> L_False .                                  (rule 22)

	','            reduce using rule 22
	';'            reduce using rule 22
	'['            reduce using rule 22
	'\\'           reduce using rule 22
	']'            reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	L_True         reduce using rule 22
	L_False        reduce using rule 22
	%eof           reduce using rule 22


State 44

	Expr1 -> String .                                   (rule 56)

	%eof           reduce using rule 56


State 45

	%start_pExpr1 -> Expr1 .                            (rule 13)

	%eof           accept


State 46

	%start_pExpr -> Expr .                              (rule 12)
	Expr -> Expr . Expr                                 (rule 50)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43
	%eof           accept

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 84

State 47

	Defn -> String . '=' Expr                           (rule 48)

	'='            shift, and enter state 83


State 48

	%start_pDefn -> Defn .                              (rule 11)

	%eof           accept


State 49

	ClassOpImp -> String . '=' Expr                     (rule 34)

	'='            shift, and enter state 82


State 50

	ListClassOpImp -> ClassOpImp . ListClassOpImp       (rule 47)

	';'            reduce using rule 46
	L_quoted       shift, and enter state 29
			(reduce using rule 46)

	%eof           reduce using rule 46

	String         goto state 49
	ClassOpImp     goto state 50
	ListClassOpImp goto state 81

State 51

	%start_pListClassOpImp -> ListClassOpImp .          (rule 10)

	%eof           accept


State 52

	ClassOpDec -> String . ':' SType                    (rule 33)

	':'            shift, and enter state 80


State 53

	ListClassOpDec -> ClassOpDec . ListClassOpDec       (rule 45)

	';'            reduce using rule 44
	'instance'     reduce using rule 44
	L_quoted       shift, and enter state 29
			(reduce using rule 44)

	%eof           reduce using rule 44

	String         goto state 52
	ClassOpDec     goto state 53
	ListClassOpDec goto state 79

State 54

	%start_pListClassOpDec -> ListClassOpDec .          (rule 9)

	%eof           accept


State 55

	%start_pListTyC -> ListTyC .                        (rule 8)

	%eof           accept


State 56

	ListTyC -> TyC .                                    (rule 39)
	ListTyC -> TyC . ',' ListTyC                        (rule 40)
	ListTyC -> TyC .                                    (rule 42)
	ListTyC -> TyC . ',' ListTyC                        (rule 43)

	','            shift, and enter state 78
	'>'            reduce using rule 42
			(reduce using rule 39)

	%eof           reduce using rule 42
			(reduce using rule 39)



State 57

	%start_pInstDec -> InstDec .                        (rule 7)

	%eof           accept


State 58

	InstDec -> 'instance' . String SType 'where' ListClassOpImp    (rule 36)
	InstDec -> 'instance' . '<' ListTyC '>' '=>' String SType 'where' ListClassOpImp    (rule 37)

	'<'            shift, and enter state 77
	L_quoted       shift, and enter state 29

	String         goto state 76

State 59

	%start_pClassDec -> ClassDec .                      (rule 6)

	%eof           accept


State 60

	ClassDec -> 'class' . '<' ListTyC '>' '=>' String String 'where' ListClassOpDec    (rule 35)

	'<'            shift, and enter state 75


State 61

	%start_pClassOpImp -> ClassOpImp .                  (rule 5)

	%eof           accept


State 62

	%start_pClassOpDec -> ClassOpDec .                  (rule 4)

	%eof           accept


State 63

	%start_pListDefn -> ListDefn .                      (rule 3)

	%eof           accept


State 64

	ListDefn -> Defn .                                  (rule 31)
	ListDefn -> Defn . ';' ListDefn                     (rule 32)

	';'            shift, and enter state 74
	%eof           reduce using rule 31


State 65

	%start_pListInstDec -> ListInstDec .                (rule 2)

	%eof           accept


State 66

	ListInstDec -> InstDec .                            (rule 28)
	ListInstDec -> InstDec . ';' ListInstDec            (rule 29)

	';'            shift, and enter state 73
	L_quoted       reduce using rule 28
	%eof           reduce using rule 28


State 67

	%start_pListClassDec -> ListClassDec .              (rule 1)

	%eof           accept


State 68

	ListClassDec -> ClassDec .                          (rule 25)
	ListClassDec -> ClassDec . ';' ListClassDec         (rule 26)

	';'            shift, and enter state 72
	'instance'     reduce using rule 25
	L_quoted       reduce using rule 25
	%eof           reduce using rule 25


State 69

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 70

	Prog -> ListClassDec . ListInstDec ListDefn         (rule 23)

	'instance'     shift, and enter state 58
	L_quoted       reduce using rule 27
	%eof           reduce using rule 27

	ListInstDec    goto state 71
	InstDec        goto state 66

State 71

	Prog -> ListClassDec ListInstDec . ListDefn         (rule 23)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 30

	String         goto state 47
	ListDefn       goto state 109
	Defn           goto state 64

State 72

	ListClassDec -> ClassDec ';' . ListClassDec         (rule 26)

	'class'        shift, and enter state 60
	'instance'     reduce using rule 24
	L_quoted       reduce using rule 24
	%eof           reduce using rule 24

	ListClassDec   goto state 108
	ClassDec       goto state 68

State 73

	ListInstDec -> InstDec ';' . ListInstDec            (rule 29)

	'instance'     shift, and enter state 58
	L_quoted       reduce using rule 27
	%eof           reduce using rule 27

	ListInstDec    goto state 107
	InstDec        goto state 66

State 74

	ListDefn -> Defn ';' . ListDefn                     (rule 32)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 30

	String         goto state 47
	ListDefn       goto state 106
	Defn           goto state 64

State 75

	ClassDec -> 'class' '<' . ListTyC '>' '=>' String String 'where' ListClassOpDec    (rule 35)

	'>'            reduce using rule 41
			(reduce using rule 38)

	L_quoted       shift, and enter state 29

	String         goto state 32
	ListTyC        goto state 105
	TyC            goto state 56

State 76

	InstDec -> 'instance' String . SType 'where' ListClassOpImp    (rule 36)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 104

State 77

	InstDec -> 'instance' '<' . ListTyC '>' '=>' String SType 'where' ListClassOpImp    (rule 37)

	'>'            reduce using rule 41
			(reduce using rule 38)

	L_quoted       shift, and enter state 29

	String         goto state 32
	ListTyC        goto state 103
	TyC            goto state 56

State 78

	ListTyC -> TyC ',' . ListTyC                        (rule 40)
	ListTyC -> TyC ',' . ListTyC                        (rule 43)

	'>'            reduce using rule 41
			(reduce using rule 38)

	L_quoted       shift, and enter state 29
	%eof           reduce using rule 41
			(reduce using rule 38)


	String         goto state 32
	ListTyC        goto state 102
	TyC            goto state 56

State 79

	ListClassOpDec -> ClassOpDec ListClassOpDec .       (rule 45)

	';'            reduce using rule 45
	'instance'     reduce using rule 45
	L_quoted       reduce using rule 45
	%eof           reduce using rule 45


State 80

	ClassOpDec -> String ':' . SType                    (rule 33)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 101

State 81

	ListClassOpImp -> ClassOpImp ListClassOpImp .       (rule 47)

	';'            reduce using rule 47
	L_quoted       reduce using rule 47
	%eof           reduce using rule 47


State 82

	ClassOpImp -> String '=' . Expr                     (rule 34)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 100

State 83

	Defn -> String '=' . Expr                           (rule 48)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 99

State 84

	Expr -> Expr . Expr                                 (rule 50)
	Expr -> Expr Expr .                                 (rule 50)

	','            reduce using rule 50
	';'            reduce using rule 50
	'['            shift, and enter state 40
			(reduce using rule 50)

	'\\'           shift, and enter state 41
			(reduce using rule 50)

	']'            reduce using rule 50
	L_integ        shift, and enter state 20
			(reduce using rule 50)

	L_quoted       shift, and enter state 29
			(reduce using rule 50)

	L_True         shift, and enter state 42
			(reduce using rule 50)

	L_False        shift, and enter state 43
			(reduce using rule 50)

	%eof           reduce using rule 50

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 84

State 85

	Expr -> '\\' String . '->' Expr                     (rule 49)

	'->'           shift, and enter state 98


State 86

	Expr -> '[' ListExpr . ']'                          (rule 54)

	']'            shift, and enter state 97


State 87

	ListExpr -> Expr ',' . ListExpr                     (rule 59)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	']'            reduce using rule 57
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43
	%eof           reduce using rule 57

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 38
	ListExpr       goto state 96

State 88

	TyC -> String SType .                               (rule 60)
	SType -> SType . '->' SType                         (rule 65)

	','            reduce using rule 60
	'->'           shift, and enter state 89
	'>'            reduce using rule 60
	%eof           reduce using rule 60


State 89

	SType -> SType '->' . SType                         (rule 65)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 95

State 90

	SType -> SType . '->' SType                         (rule 65)
	SType -> '[' SType . ']'                            (rule 66)

	'->'           shift, and enter state 89
	']'            shift, and enter state 94


State 91

	OvType -> '<' ListTyC . '>' '=>' SType              (rule 61)

	'>'            shift, and enter state 93


State 92

	SType -> String String .                            (rule 63)

	','            reduce using rule 63
	'->'           reduce using rule 63
	';'            reduce using rule 63
	'>'            reduce using rule 63
	']'            reduce using rule 63
	'instance'     reduce using rule 63
	'where'        reduce using rule 63
	L_quoted       reduce using rule 63
	%eof           reduce using rule 63


State 93

	OvType -> '<' ListTyC '>' . '=>' SType              (rule 61)

	'=>'           shift, and enter state 114


State 94

	SType -> '[' SType ']' .                            (rule 66)

	','            reduce using rule 66
	'->'           reduce using rule 66
	';'            reduce using rule 66
	'>'            reduce using rule 66
	']'            reduce using rule 66
	'instance'     reduce using rule 66
	'where'        reduce using rule 66
	L_quoted       reduce using rule 66
	%eof           reduce using rule 66


State 95

	SType -> SType . '->' SType                         (rule 65)
	SType -> SType '->' SType .                         (rule 65)

	','            reduce using rule 65
	'->'           shift, and enter state 89
			(reduce using rule 65)

	';'            reduce using rule 65
	'>'            reduce using rule 65
	']'            reduce using rule 65
	'instance'     reduce using rule 65
	'where'        reduce using rule 65
	L_quoted       reduce using rule 65
	%eof           reduce using rule 65


State 96

	ListExpr -> Expr ',' ListExpr .                     (rule 59)

	']'            reduce using rule 59
	%eof           reduce using rule 59


State 97

	Expr -> '[' ListExpr ']' .                          (rule 54)

	','            reduce using rule 54
	';'            reduce using rule 54
	'['            reduce using rule 54
	'\\'           reduce using rule 54
	']'            reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54
	L_True         reduce using rule 54
	L_False        reduce using rule 54
	%eof           reduce using rule 54


State 98

	Expr -> '\\' String '->' . Expr                     (rule 49)

	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 113

State 99

	Defn -> String '=' Expr .                           (rule 48)
	Expr -> Expr . Expr                                 (rule 50)

	';'            reduce using rule 48
	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
	L_True         shift, and enter state 42
	L_False        shift, and enter state 43
	%eof           reduce using rule 48

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 84

State 100

	ClassOpImp -> String '=' Expr .                     (rule 34)
	Expr -> Expr . Expr                                 (rule 50)

	';'            reduce using rule 34
	'['            shift, and enter state 40
	'\\'           shift, and enter state 41
	L_integ        shift, and enter state 20
	L_quoted       shift, and enter state 29
			(reduce using rule 34)

	L_True         shift, and enter state 42
	L_False        shift, and enter state 43
	%eof           reduce using rule 34

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 84

State 101

	ClassOpDec -> String ':' SType .                    (rule 33)
	SType -> SType . '->' SType                         (rule 65)

	'->'           shift, and enter state 89
	';'            reduce using rule 33
	'instance'     reduce using rule 33
	L_quoted       reduce using rule 33
	%eof           reduce using rule 33


State 102

	ListTyC -> TyC ',' ListTyC .                        (rule 40)
	ListTyC -> TyC ',' ListTyC .                        (rule 43)

	'>'            reduce using rule 43
			(reduce using rule 40)

	%eof           reduce using rule 43
			(reduce using rule 40)



State 103

	InstDec -> 'instance' '<' ListTyC . '>' '=>' String SType 'where' ListClassOpImp    (rule 37)

	'>'            shift, and enter state 112


State 104

	InstDec -> 'instance' String SType . 'where' ListClassOpImp    (rule 36)
	SType -> SType . '->' SType                         (rule 65)

	'->'           shift, and enter state 89
	'where'        shift, and enter state 111


State 105

	ClassDec -> 'class' '<' ListTyC . '>' '=>' String String 'where' ListClassOpDec    (rule 35)

	'>'            shift, and enter state 110


State 106

	ListDefn -> Defn ';' ListDefn .                     (rule 32)

	%eof           reduce using rule 32


State 107

	ListInstDec -> InstDec ';' ListInstDec .            (rule 29)

	L_quoted       reduce using rule 29
	%eof           reduce using rule 29


State 108

	ListClassDec -> ClassDec ';' ListClassDec .         (rule 26)

	'instance'     reduce using rule 26
	L_quoted       reduce using rule 26
	%eof           reduce using rule 26


State 109

	Prog -> ListClassDec ListInstDec ListDefn .         (rule 23)

	%eof           reduce using rule 23


State 110

	ClassDec -> 'class' '<' ListTyC '>' . '=>' String String 'where' ListClassOpDec    (rule 35)

	'=>'           shift, and enter state 118


State 111

	InstDec -> 'instance' String SType 'where' . ListClassOpImp    (rule 36)

	';'            reduce using rule 46
	L_quoted       shift, and enter state 29
			(reduce using rule 46)

	%eof           reduce using rule 46

	String         goto state 49
	ClassOpImp     goto state 50
	ListClassOpImp goto state 117

State 112

	InstDec -> 'instance' '<' ListTyC '>' . '=>' String SType 'where' ListClassOpImp    (rule 37)

	'=>'           shift, and enter state 116


State 113

	Expr -> '\\' String '->' Expr .                     (rule 49)
	Expr -> Expr . Expr                                 (rule 50)

	','            reduce using rule 49
	';'            reduce using rule 49
	'['            shift, and enter state 40
			(reduce using rule 49)

	'\\'           shift, and enter state 41
			(reduce using rule 49)

	']'            reduce using rule 49
	L_integ        shift, and enter state 20
			(reduce using rule 49)

	L_quoted       shift, and enter state 29
			(reduce using rule 49)

	L_True         shift, and enter state 42
			(reduce using rule 49)

	L_False        shift, and enter state 43
			(reduce using rule 49)

	%eof           reduce using rule 49

	Integer        goto state 34
	String         goto state 35
	True           goto state 36
	False          goto state 37
	Expr           goto state 84

State 114

	OvType -> '<' ListTyC '>' '=>' . SType              (rule 61)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 115

State 115

	OvType -> '<' ListTyC '>' '=>' SType .              (rule 61)
	SType -> SType . '->' SType                         (rule 65)

	'->'           shift, and enter state 89
	%eof           reduce using rule 61


State 116

	InstDec -> 'instance' '<' ListTyC '>' '=>' . String SType 'where' ListClassOpImp    (rule 37)

	L_quoted       shift, and enter state 29

	String         goto state 120

State 117

	InstDec -> 'instance' String SType 'where' ListClassOpImp .    (rule 36)

	';'            reduce using rule 36
	L_quoted       reduce using rule 36
	%eof           reduce using rule 36


State 118

	ClassDec -> 'class' '<' ListTyC '>' '=>' . String String 'where' ListClassOpDec    (rule 35)

	L_quoted       shift, and enter state 29

	String         goto state 119

State 119

	ClassDec -> 'class' '<' ListTyC '>' '=>' String . String 'where' ListClassOpDec    (rule 35)

	L_quoted       shift, and enter state 29

	String         goto state 122

State 120

	InstDec -> 'instance' '<' ListTyC '>' '=>' String . SType 'where' ListClassOpImp    (rule 37)

	'Bool'         shift, and enter state 26
	'Integer'      shift, and enter state 27
	'['            shift, and enter state 28
	L_quoted       shift, and enter state 29

	String         goto state 21
	SType          goto state 121

State 121

	InstDec -> 'instance' '<' ListTyC '>' '=>' String SType . 'where' ListClassOpImp    (rule 37)
	SType -> SType . '->' SType                         (rule 65)

	'->'           shift, and enter state 89
	'where'        shift, and enter state 124


State 122

	ClassDec -> 'class' '<' ListTyC '>' '=>' String String . 'where' ListClassOpDec    (rule 35)

	'where'        shift, and enter state 123


State 123

	ClassDec -> 'class' '<' ListTyC '>' '=>' String String 'where' . ListClassOpDec    (rule 35)

	';'            reduce using rule 44
	'instance'     reduce using rule 44
	L_quoted       shift, and enter state 29
			(reduce using rule 44)

	%eof           reduce using rule 44

	String         goto state 52
	ClassOpDec     goto state 53
	ListClassOpDec goto state 126

State 124

	InstDec -> 'instance' '<' ListTyC '>' '=>' String SType 'where' . ListClassOpImp    (rule 37)

	';'            reduce using rule 46
	L_quoted       shift, and enter state 29
			(reduce using rule 46)

	%eof           reduce using rule 46

	String         goto state 49
	ClassOpImp     goto state 50
	ListClassOpImp goto state 125

State 125

	InstDec -> 'instance' '<' ListTyC '>' '=>' String SType 'where' ListClassOpImp .    (rule 37)

	';'            reduce using rule 37
	L_quoted       reduce using rule 37
	%eof           reduce using rule 37


State 126

	ClassDec -> 'class' '<' ListTyC '>' '=>' String String 'where' ListClassOpDec .    (rule 35)

	';'            reduce using rule 35
	'instance'     reduce using rule 35
	L_quoted       reduce using rule 35
	%eof           reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 70
Number of terminals: 20
Number of non-terminals: 42
Number of states: 127
