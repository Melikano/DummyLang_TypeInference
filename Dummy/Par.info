-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Dummy/Par.y
-----------------------------------------------------------------------------

state 47 contains 1 shift/reduce conflicts.
state 50 contains 1 shift/reduce conflicts.
state 69 contains 6 shift/reduce conflicts.
state 90 contains 1 shift/reduce conflicts.
state 92 contains 6 shift/reduce conflicts.
state 96 contains 6 shift/reduce conflicts.
state 105 contains 1 shift/reduce conflicts.
state 106 contains 1 shift/reduce conflicts.
state 109 contains 6 shift/reduce conflicts.
state 120 contains 1 shift/reduce conflicts.
state 124 contains 6 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pListClassDec -> ListClassDec               (1)
	%start_pListInstDec -> ListInstDec                 (2)
	%start_pListExpr -> ListExpr                       (3)
	%start_pClassOpDec -> ClassOpDec                   (4)
	%start_pClassOpImp -> ClassOpImp                   (5)
	%start_pClassDec -> ClassDec                       (6)
	%start_pInstDec -> InstDec                         (7)
	%start_pListClassOpDec -> ListClassOpDec           (8)
	%start_pListClassOpImp -> ListClassOpImp           (9)
	%start_pList -> List                               (10)
	%start_pExpr -> Expr                               (11)
	%start_pTyC -> TyC                                 (12)
	%start_pOvType -> OvType                           (13)
	%start_pListTyC -> ListTyC                         (14)
	%start_pSType -> SType                             (15)
	%start_pDType -> DType                             (16)
	True -> L_True                                     (17)
	False -> L_False                                   (18)
	UIdent -> L_UIdent                                 (19)
	LIdent -> L_LIdent                                 (20)
	Prog -> ListClassDec ListInstDec ListExpr          (21)
	ListClassDec ->                                    (22)
	ListClassDec -> ClassDec                           (23)
	ListClassDec -> ClassDec ';' ListClassDec          (24)
	ListInstDec ->                                     (25)
	ListInstDec -> InstDec                             (26)
	ListInstDec -> InstDec ';' ListInstDec             (27)
	ListExpr ->                                        (28)
	ListExpr -> Expr                                   (29)
	ListExpr -> Expr ';' ListExpr                      (30)
	ClassOpDec -> LIdent ':' SType                     (31)
	ClassOpImp -> LIdent '=' Expr                      (32)
	ClassDec -> 'class' UIdent LIdent 'where' ListClassOpDec   (33)
	InstDec -> 'instance' UIdent SType 'where' ListClassOpImp   (34)
	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType 'where' ListClassOpImp   (35)
	ListClassOpDec ->                                  (36)
	ListClassOpDec -> ClassOpDec ListClassOpDec        (37)
	ListClassOpImp ->                                  (38)
	ListClassOpImp -> ClassOpImp ListClassOpImp        (39)
	List -> '[]'                                       (40)
	List -> LIdent ':' LIdent                          (41)
	Expr -> LIdent '=' Expr                            (42)
	Expr -> '\\' LIdent '->' Expr                      (43)
	Expr -> LIdent                                     (44)
	Expr -> Expr Expr                                  (45)
	Expr -> List                                       (46)
	Expr -> 'case' Expr 'of' List '->' Expr ';' List '->' Expr   (47)
	Expr -> True                                       (48)
	Expr -> False                                      (49)
	TyC -> UIdent SType                                (50)
	OvType -> '<' ListTyC '>' '=>' SType               (51)
	ListTyC ->                                         (52)
	ListTyC -> TyC                                     (53)
	ListTyC -> TyC ',' ListTyC                         (54)
	SType -> LIdent                                    (55)
	SType -> UIdent LIdent                             (56)
	SType -> 'Bool'                                    (57)
	SType -> SType '->' SType                          (58)
	SType -> '[' SType ']'                             (59)
	DType -> OvType                                    (60)
	DType -> SType                                     (61)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	','            { PT _ (TS _ 1) }
	'->'           { PT _ (TS _ 2) }
	':'            { PT _ (TS _ 3) }
	';'            { PT _ (TS _ 4) }
	'<'            { PT _ (TS _ 5) }
	'='            { PT _ (TS _ 6) }
	'=>'           { PT _ (TS _ 7) }
	'>'            { PT _ (TS _ 8) }
	'Bool'         { PT _ (TS _ 9) }
	'['            { PT _ (TS _ 10) }
	'[]'           { PT _ (TS _ 11) }
	'\\'           { PT _ (TS _ 12) }
	']'            { PT _ (TS _ 13) }
	'case'         { PT _ (TS _ 14) }
	'class'        { PT _ (TS _ 15) }
	'instance'     { PT _ (TS _ 16) }
	'of'           { PT _ (TS _ 17) }
	'where'        { PT _ (TS _ 18) }
	L_True         { PT _ (T_True $$) }
	L_False        { PT _ (T_False $$) }
	L_UIdent       { PT _ (T_UIdent $$) }
	L_LIdent       { PT _ (T_LIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pListClassDec rule  1
	%start_pListInstDec rule  2
	%start_pListExpr rule  3
	%start_pClassOpDec rule  4
	%start_pClassOpImp rule  5
	%start_pClassDec rule  6
	%start_pInstDec rule  7
	%start_pListClassOpDec rule  8
	%start_pListClassOpImp rule  9
	%start_pList    rule  10
	%start_pExpr    rule  11
	%start_pTyC     rule  12
	%start_pOvType  rule  13
	%start_pListTyC rule  14
	%start_pSType   rule  15
	%start_pDType   rule  16
	True            rule  17
	False           rule  18
	UIdent          rule  19
	LIdent          rule  20
	Prog            rule  21
	ListClassDec    rules 22, 23, 24
	ListInstDec     rules 25, 26, 27
	ListExpr        rules 28, 29, 30
	ClassOpDec      rule  31
	ClassOpImp      rule  32
	ClassDec        rule  33
	InstDec         rules 34, 35
	ListClassOpDec  rules 36, 37
	ListClassOpImp  rules 38, 39
	List            rules 40, 41
	Expr            rules 42, 43, 44, 45, 46, 47, 48, 49
	TyC             rule  50
	OvType          rule  51
	ListTyC         rules 52, 53, 54
	SType           rules 55, 56, 57, 58, 59
	DType           rules 60, 61

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProg -> . Prog                              (rule 0)

	'[]'           reduce using rule 22
	'\\'           reduce using rule 22
	'case'         reduce using rule 22
	'class'        shift, and enter state 55
	'instance'     reduce using rule 22
	L_True         reduce using rule 22
	L_False        reduce using rule 22
	L_LIdent       reduce using rule 22
	%eof           reduce using rule 22

	Prog           goto state 64
	ListClassDec   goto state 65
	ClassDec       goto state 63

State 1

	%start_pListClassDec -> . ListClassDec              (rule 1)

	'class'        shift, and enter state 55
	%eof           reduce using rule 22

	ListClassDec   goto state 62
	ClassDec       goto state 63

State 2

	%start_pListInstDec -> . ListInstDec                (rule 2)

	'instance'     shift, and enter state 53
	%eof           reduce using rule 25

	ListInstDec    goto state 60
	InstDec        goto state 61

State 3

	%start_pListExpr -> . ListExpr                      (rule 3)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28
	%eof           reduce using rule 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	ListExpr       goto state 58
	List           goto state 38
	Expr           goto state 59

State 4

	%start_pClassOpDec -> . ClassOpDec                  (rule 4)

	L_LIdent       shift, and enter state 28

	LIdent         goto state 49
	ClassOpDec     goto state 57

State 5

	%start_pClassOpImp -> . ClassOpImp                  (rule 5)

	L_LIdent       shift, and enter state 28

	LIdent         goto state 46
	ClassOpImp     goto state 56

State 6

	%start_pClassDec -> . ClassDec                      (rule 6)

	'class'        shift, and enter state 55

	ClassDec       goto state 54

State 7

	%start_pInstDec -> . InstDec                        (rule 7)

	'instance'     shift, and enter state 53

	InstDec        goto state 52

State 8

	%start_pListClassOpDec -> . ListClassOpDec          (rule 8)

	L_LIdent       shift, and enter state 28
	%eof           reduce using rule 36

	LIdent         goto state 49
	ClassOpDec     goto state 50
	ListClassOpDec goto state 51

State 9

	%start_pListClassOpImp -> . ListClassOpImp          (rule 9)

	L_LIdent       shift, and enter state 28
	%eof           reduce using rule 38

	LIdent         goto state 46
	ClassOpImp     goto state 47
	ListClassOpImp goto state 48

State 10

	%start_pList -> . List                              (rule 10)

	'[]'           shift, and enter state 40
	L_LIdent       shift, and enter state 28

	LIdent         goto state 44
	List           goto state 45

State 11

	%start_pExpr -> . Expr                              (rule 11)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 39

State 12

	%start_pTyC -> . TyC                                (rule 12)

	L_UIdent       shift, and enter state 27

	UIdent         goto state 30
	TyC            goto state 34

State 13

	%start_pOvType -> . OvType                          (rule 13)

	'<'            shift, and enter state 24

	OvType         goto state 33

State 14

	%start_pListTyC -> . ListTyC                        (rule 14)

	L_UIdent       shift, and enter state 27
	%eof           reduce using rule 52

	UIdent         goto state 30
	TyC            goto state 31
	ListTyC        goto state 32

State 15

	%start_pSType -> . SType                            (rule 15)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 29

State 16

	%start_pDType -> . DType                            (rule 16)

	'<'            shift, and enter state 24
	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	OvType         goto state 21
	SType          goto state 22
	DType          goto state 23

State 17

	True -> . L_True                                    (rule 17)

	L_True         shift, and enter state 18


State 18

	True -> L_True .                                    (rule 17)

	';'            reduce using rule 17
	'[]'           reduce using rule 17
	'\\'           reduce using rule 17
	'case'         reduce using rule 17
	'of'           reduce using rule 17
	L_True         reduce using rule 17
	L_False        reduce using rule 17
	L_LIdent       reduce using rule 17
	%eof           reduce using rule 17


State 19

	SType -> UIdent . LIdent                            (rule 56)

	L_LIdent       shift, and enter state 28

	LIdent         goto state 87

State 20

	SType -> LIdent .                                   (rule 55)

	','            reduce using rule 55
	'->'           reduce using rule 55
	';'            reduce using rule 55
	'>'            reduce using rule 55
	'[]'           reduce using rule 55
	'\\'           reduce using rule 55
	']'            reduce using rule 55
	'case'         reduce using rule 55
	'instance'     reduce using rule 55
	'where'        reduce using rule 55
	L_True         reduce using rule 55
	L_False        reduce using rule 55
	L_LIdent       reduce using rule 55
	%eof           reduce using rule 55


State 21

	DType -> OvType .                                   (rule 60)

	%eof           reduce using rule 60


State 22

	SType -> SType . '->' SType                         (rule 58)
	DType -> SType .                                    (rule 61)

	'->'           shift, and enter state 84
	%eof           reduce using rule 61


State 23

	%start_pDType -> DType .                            (rule 16)

	%eof           accept


State 24

	OvType -> '<' . ListTyC '>' '=>' SType              (rule 51)

	'>'            reduce using rule 52
	L_UIdent       shift, and enter state 27

	UIdent         goto state 30
	TyC            goto state 31
	ListTyC        goto state 86

State 25

	SType -> 'Bool' .                                   (rule 57)

	','            reduce using rule 57
	'->'           reduce using rule 57
	';'            reduce using rule 57
	'>'            reduce using rule 57
	'[]'           reduce using rule 57
	'\\'           reduce using rule 57
	']'            reduce using rule 57
	'case'         reduce using rule 57
	'instance'     reduce using rule 57
	'where'        reduce using rule 57
	L_True         reduce using rule 57
	L_False        reduce using rule 57
	L_LIdent       reduce using rule 57
	%eof           reduce using rule 57


State 26

	SType -> '[' . SType ']'                            (rule 59)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 85

State 27

	UIdent -> L_UIdent .                                (rule 19)

	'Bool'         reduce using rule 19
	'['            reduce using rule 19
	L_UIdent       reduce using rule 19
	L_LIdent       reduce using rule 19


State 28

	LIdent -> L_LIdent .                                (rule 20)

	','            reduce using rule 20
	'->'           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'>'            reduce using rule 20
	'[]'           reduce using rule 20
	'\\'           reduce using rule 20
	']'            reduce using rule 20
	'case'         reduce using rule 20
	'instance'     reduce using rule 20
	'of'           reduce using rule 20
	'where'        reduce using rule 20
	L_True         reduce using rule 20
	L_False        reduce using rule 20
	L_LIdent       reduce using rule 20
	%eof           reduce using rule 20


State 29

	%start_pSType -> SType .                            (rule 15)
	SType -> SType . '->' SType                         (rule 58)

	'->'           shift, and enter state 84
	%eof           accept


State 30

	TyC -> UIdent . SType                               (rule 50)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 83

State 31

	ListTyC -> TyC .                                    (rule 53)
	ListTyC -> TyC . ',' ListTyC                        (rule 54)

	','            shift, and enter state 82
	'>'            reduce using rule 53
	%eof           reduce using rule 53


State 32

	%start_pListTyC -> ListTyC .                        (rule 14)

	%eof           accept


State 33

	%start_pOvType -> OvType .                          (rule 13)

	%eof           accept


State 34

	%start_pTyC -> TyC .                                (rule 12)

	%eof           accept


State 35

	Expr -> True .                                      (rule 48)

	';'            reduce using rule 48
	'[]'           reduce using rule 48
	'\\'           reduce using rule 48
	'case'         reduce using rule 48
	'of'           reduce using rule 48
	L_True         reduce using rule 48
	L_False        reduce using rule 48
	L_LIdent       reduce using rule 48
	%eof           reduce using rule 48


State 36

	Expr -> False .                                     (rule 49)

	';'            reduce using rule 49
	'[]'           reduce using rule 49
	'\\'           reduce using rule 49
	'case'         reduce using rule 49
	'of'           reduce using rule 49
	L_True         reduce using rule 49
	L_False        reduce using rule 49
	L_LIdent       reduce using rule 49
	%eof           reduce using rule 49


State 37

	List -> LIdent . ':' LIdent                         (rule 41)
	Expr -> LIdent . '=' Expr                           (rule 42)
	Expr -> LIdent .                                    (rule 44)

	':'            shift, and enter state 78
	';'            reduce using rule 44
	'='            shift, and enter state 81
	'[]'           reduce using rule 44
	'\\'           reduce using rule 44
	'case'         reduce using rule 44
	'of'           reduce using rule 44
	L_True         reduce using rule 44
	L_False        reduce using rule 44
	L_LIdent       reduce using rule 44
	%eof           reduce using rule 44


State 38

	Expr -> List .                                      (rule 46)

	';'            reduce using rule 46
	'[]'           reduce using rule 46
	'\\'           reduce using rule 46
	'case'         reduce using rule 46
	'of'           reduce using rule 46
	L_True         reduce using rule 46
	L_False        reduce using rule 46
	L_LIdent       reduce using rule 46
	%eof           reduce using rule 46


State 39

	%start_pExpr -> Expr .                              (rule 11)
	Expr -> Expr . Expr                                 (rule 45)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28
	%eof           accept

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 40

	List -> '[]' .                                      (rule 40)

	'->'           reduce using rule 40
	';'            reduce using rule 40
	'[]'           reduce using rule 40
	'\\'           reduce using rule 40
	'case'         reduce using rule 40
	'of'           reduce using rule 40
	L_True         reduce using rule 40
	L_False        reduce using rule 40
	L_LIdent       reduce using rule 40
	%eof           reduce using rule 40


State 41

	Expr -> '\\' . LIdent '->' Expr                     (rule 43)

	L_LIdent       shift, and enter state 28

	LIdent         goto state 80

State 42

	Expr -> 'case' . Expr 'of' List '->' Expr ';' List '->' Expr    (rule 47)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 79

State 43

	False -> L_False .                                  (rule 18)

	';'            reduce using rule 18
	'[]'           reduce using rule 18
	'\\'           reduce using rule 18
	'case'         reduce using rule 18
	'of'           reduce using rule 18
	L_True         reduce using rule 18
	L_False        reduce using rule 18
	L_LIdent       reduce using rule 18
	%eof           reduce using rule 18


State 44

	List -> LIdent . ':' LIdent                         (rule 41)

	':'            shift, and enter state 78


State 45

	%start_pList -> List .                              (rule 10)

	%eof           accept


State 46

	ClassOpImp -> LIdent . '=' Expr                     (rule 32)

	'='            shift, and enter state 77


State 47

	ListClassOpImp -> ClassOpImp . ListClassOpImp       (rule 39)

	';'            reduce using rule 38
	'[]'           reduce using rule 38
	'\\'           reduce using rule 38
	'case'         reduce using rule 38
	L_True         reduce using rule 38
	L_False        reduce using rule 38
	L_LIdent       shift, and enter state 28
			(reduce using rule 38)

	%eof           reduce using rule 38

	LIdent         goto state 46
	ClassOpImp     goto state 47
	ListClassOpImp goto state 76

State 48

	%start_pListClassOpImp -> ListClassOpImp .          (rule 9)

	%eof           accept


State 49

	ClassOpDec -> LIdent . ':' SType                    (rule 31)

	':'            shift, and enter state 75


State 50

	ListClassOpDec -> ClassOpDec . ListClassOpDec       (rule 37)

	';'            reduce using rule 36
	'[]'           reduce using rule 36
	'\\'           reduce using rule 36
	'case'         reduce using rule 36
	'instance'     reduce using rule 36
	L_True         reduce using rule 36
	L_False        reduce using rule 36
	L_LIdent       shift, and enter state 28
			(reduce using rule 36)

	%eof           reduce using rule 36

	LIdent         goto state 49
	ClassOpDec     goto state 50
	ListClassOpDec goto state 74

State 51

	%start_pListClassOpDec -> ListClassOpDec .          (rule 8)

	%eof           accept


State 52

	%start_pInstDec -> InstDec .                        (rule 7)

	%eof           accept


State 53

	InstDec -> 'instance' . UIdent SType 'where' ListClassOpImp    (rule 34)
	InstDec -> 'instance' . '<' TyC '>' '=>' UIdent SType 'where' ListClassOpImp    (rule 35)

	'<'            shift, and enter state 73
	L_UIdent       shift, and enter state 27

	UIdent         goto state 72

State 54

	%start_pClassDec -> ClassDec .                      (rule 6)

	%eof           accept


State 55

	ClassDec -> 'class' . UIdent LIdent 'where' ListClassOpDec    (rule 33)

	L_UIdent       shift, and enter state 27

	UIdent         goto state 71

State 56

	%start_pClassOpImp -> ClassOpImp .                  (rule 5)

	%eof           accept


State 57

	%start_pClassOpDec -> ClassOpDec .                  (rule 4)

	%eof           accept


State 58

	%start_pListExpr -> ListExpr .                      (rule 3)

	%eof           accept


State 59

	ListExpr -> Expr .                                  (rule 29)
	ListExpr -> Expr . ';' ListExpr                     (rule 30)
	Expr -> Expr . Expr                                 (rule 45)

	';'            shift, and enter state 70
	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28
	%eof           reduce using rule 29

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 60

	%start_pListInstDec -> ListInstDec .                (rule 2)

	%eof           accept


State 61

	ListInstDec -> InstDec .                            (rule 26)
	ListInstDec -> InstDec . ';' ListInstDec            (rule 27)

	';'            shift, and enter state 68
	'[]'           reduce using rule 26
	'\\'           reduce using rule 26
	'case'         reduce using rule 26
	L_True         reduce using rule 26
	L_False        reduce using rule 26
	L_LIdent       reduce using rule 26
	%eof           reduce using rule 26


State 62

	%start_pListClassDec -> ListClassDec .              (rule 1)

	%eof           accept


State 63

	ListClassDec -> ClassDec .                          (rule 23)
	ListClassDec -> ClassDec . ';' ListClassDec         (rule 24)

	';'            shift, and enter state 67
	'[]'           reduce using rule 23
	'\\'           reduce using rule 23
	'case'         reduce using rule 23
	'instance'     reduce using rule 23
	L_True         reduce using rule 23
	L_False        reduce using rule 23
	L_LIdent       reduce using rule 23
	%eof           reduce using rule 23


State 64

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 65

	Prog -> ListClassDec . ListInstDec ListExpr         (rule 21)

	'[]'           reduce using rule 25
	'\\'           reduce using rule 25
	'case'         reduce using rule 25
	'instance'     shift, and enter state 53
	L_True         reduce using rule 25
	L_False        reduce using rule 25
	L_LIdent       reduce using rule 25
	%eof           reduce using rule 25

	ListInstDec    goto state 66
	InstDec        goto state 61

State 66

	Prog -> ListClassDec ListInstDec . ListExpr         (rule 21)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28
	%eof           reduce using rule 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	ListExpr       goto state 104
	List           goto state 38
	Expr           goto state 59

State 67

	ListClassDec -> ClassDec ';' . ListClassDec         (rule 24)

	'[]'           reduce using rule 22
	'\\'           reduce using rule 22
	'case'         reduce using rule 22
	'class'        shift, and enter state 55
	'instance'     reduce using rule 22
	L_True         reduce using rule 22
	L_False        reduce using rule 22
	L_LIdent       reduce using rule 22
	%eof           reduce using rule 22

	ListClassDec   goto state 103
	ClassDec       goto state 63

State 68

	ListInstDec -> InstDec ';' . ListInstDec            (rule 27)

	'[]'           reduce using rule 25
	'\\'           reduce using rule 25
	'case'         reduce using rule 25
	'instance'     shift, and enter state 53
	L_True         reduce using rule 25
	L_False        reduce using rule 25
	L_LIdent       reduce using rule 25
	%eof           reduce using rule 25

	ListInstDec    goto state 102
	InstDec        goto state 61

State 69

	Expr -> Expr . Expr                                 (rule 45)
	Expr -> Expr Expr .                                 (rule 45)

	';'            reduce using rule 45
	'[]'           shift, and enter state 40
			(reduce using rule 45)

	'\\'           shift, and enter state 41
			(reduce using rule 45)

	'case'         shift, and enter state 42
			(reduce using rule 45)

	'of'           reduce using rule 45
	L_True         shift, and enter state 18
			(reduce using rule 45)

	L_False        shift, and enter state 43
			(reduce using rule 45)

	L_LIdent       shift, and enter state 28
			(reduce using rule 45)

	%eof           reduce using rule 45

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 70

	ListExpr -> Expr ';' . ListExpr                     (rule 30)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28
	%eof           reduce using rule 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	ListExpr       goto state 101
	List           goto state 38
	Expr           goto state 59

State 71

	ClassDec -> 'class' UIdent . LIdent 'where' ListClassOpDec    (rule 33)

	L_LIdent       shift, and enter state 28

	LIdent         goto state 100

State 72

	InstDec -> 'instance' UIdent . SType 'where' ListClassOpImp    (rule 34)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 99

State 73

	InstDec -> 'instance' '<' . TyC '>' '=>' UIdent SType 'where' ListClassOpImp    (rule 35)

	L_UIdent       shift, and enter state 27

	UIdent         goto state 30
	TyC            goto state 98

State 74

	ListClassOpDec -> ClassOpDec ListClassOpDec .       (rule 37)

	';'            reduce using rule 37
	'[]'           reduce using rule 37
	'\\'           reduce using rule 37
	'case'         reduce using rule 37
	'instance'     reduce using rule 37
	L_True         reduce using rule 37
	L_False        reduce using rule 37
	L_LIdent       reduce using rule 37
	%eof           reduce using rule 37


State 75

	ClassOpDec -> LIdent ':' . SType                    (rule 31)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 97

State 76

	ListClassOpImp -> ClassOpImp ListClassOpImp .       (rule 39)

	';'            reduce using rule 39
	'[]'           reduce using rule 39
	'\\'           reduce using rule 39
	'case'         reduce using rule 39
	L_True         reduce using rule 39
	L_False        reduce using rule 39
	L_LIdent       reduce using rule 39
	%eof           reduce using rule 39


State 77

	ClassOpImp -> LIdent '=' . Expr                     (rule 32)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 96

State 78

	List -> LIdent ':' . LIdent                         (rule 41)

	L_LIdent       shift, and enter state 28

	LIdent         goto state 95

State 79

	Expr -> Expr . Expr                                 (rule 45)
	Expr -> 'case' Expr . 'of' List '->' Expr ';' List '->' Expr    (rule 47)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	'of'           shift, and enter state 94
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 80

	Expr -> '\\' LIdent . '->' Expr                     (rule 43)

	'->'           shift, and enter state 93


State 81

	Expr -> LIdent '=' . Expr                           (rule 42)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 92

State 82

	ListTyC -> TyC ',' . ListTyC                        (rule 54)

	'>'            reduce using rule 52
	L_UIdent       shift, and enter state 27
	%eof           reduce using rule 52

	UIdent         goto state 30
	TyC            goto state 31
	ListTyC        goto state 91

State 83

	TyC -> UIdent SType .                               (rule 50)
	SType -> SType . '->' SType                         (rule 58)

	','            reduce using rule 50
	'->'           shift, and enter state 84
	'>'            reduce using rule 50
	%eof           reduce using rule 50


State 84

	SType -> SType '->' . SType                         (rule 58)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 90

State 85

	SType -> SType . '->' SType                         (rule 58)
	SType -> '[' SType . ']'                            (rule 59)

	'->'           shift, and enter state 84
	']'            shift, and enter state 89


State 86

	OvType -> '<' ListTyC . '>' '=>' SType              (rule 51)

	'>'            shift, and enter state 88


State 87

	SType -> UIdent LIdent .                            (rule 56)

	','            reduce using rule 56
	'->'           reduce using rule 56
	';'            reduce using rule 56
	'>'            reduce using rule 56
	'[]'           reduce using rule 56
	'\\'           reduce using rule 56
	']'            reduce using rule 56
	'case'         reduce using rule 56
	'instance'     reduce using rule 56
	'where'        reduce using rule 56
	L_True         reduce using rule 56
	L_False        reduce using rule 56
	L_LIdent       reduce using rule 56
	%eof           reduce using rule 56


State 88

	OvType -> '<' ListTyC '>' . '=>' SType              (rule 51)

	'=>'           shift, and enter state 110


State 89

	SType -> '[' SType ']' .                            (rule 59)

	','            reduce using rule 59
	'->'           reduce using rule 59
	';'            reduce using rule 59
	'>'            reduce using rule 59
	'[]'           reduce using rule 59
	'\\'           reduce using rule 59
	']'            reduce using rule 59
	'case'         reduce using rule 59
	'instance'     reduce using rule 59
	'where'        reduce using rule 59
	L_True         reduce using rule 59
	L_False        reduce using rule 59
	L_LIdent       reduce using rule 59
	%eof           reduce using rule 59


State 90

	SType -> SType . '->' SType                         (rule 58)
	SType -> SType '->' SType .                         (rule 58)

	','            reduce using rule 58
	'->'           shift, and enter state 84
			(reduce using rule 58)

	';'            reduce using rule 58
	'>'            reduce using rule 58
	'[]'           reduce using rule 58
	'\\'           reduce using rule 58
	']'            reduce using rule 58
	'case'         reduce using rule 58
	'instance'     reduce using rule 58
	'where'        reduce using rule 58
	L_True         reduce using rule 58
	L_False        reduce using rule 58
	L_LIdent       reduce using rule 58
	%eof           reduce using rule 58


State 91

	ListTyC -> TyC ',' ListTyC .                        (rule 54)

	'>'            reduce using rule 54
	%eof           reduce using rule 54


State 92

	Expr -> LIdent '=' Expr .                           (rule 42)
	Expr -> Expr . Expr                                 (rule 45)

	';'            reduce using rule 42
	'[]'           shift, and enter state 40
			(reduce using rule 42)

	'\\'           shift, and enter state 41
			(reduce using rule 42)

	'case'         shift, and enter state 42
			(reduce using rule 42)

	'of'           reduce using rule 42
	L_True         shift, and enter state 18
			(reduce using rule 42)

	L_False        shift, and enter state 43
			(reduce using rule 42)

	L_LIdent       shift, and enter state 28
			(reduce using rule 42)

	%eof           reduce using rule 42

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 93

	Expr -> '\\' LIdent '->' . Expr                     (rule 43)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 109

State 94

	Expr -> 'case' Expr 'of' . List '->' Expr ';' List '->' Expr    (rule 47)

	'[]'           shift, and enter state 40
	L_LIdent       shift, and enter state 28

	LIdent         goto state 44
	List           goto state 108

State 95

	List -> LIdent ':' LIdent .                         (rule 41)

	'->'           reduce using rule 41
	';'            reduce using rule 41
	'[]'           reduce using rule 41
	'\\'           reduce using rule 41
	'case'         reduce using rule 41
	'of'           reduce using rule 41
	L_True         reduce using rule 41
	L_False        reduce using rule 41
	L_LIdent       reduce using rule 41
	%eof           reduce using rule 41


State 96

	ClassOpImp -> LIdent '=' Expr .                     (rule 32)
	Expr -> Expr . Expr                                 (rule 45)

	';'            reduce using rule 32
	'[]'           shift, and enter state 40
			(reduce using rule 32)

	'\\'           shift, and enter state 41
			(reduce using rule 32)

	'case'         shift, and enter state 42
			(reduce using rule 32)

	L_True         shift, and enter state 18
			(reduce using rule 32)

	L_False        shift, and enter state 43
			(reduce using rule 32)

	L_LIdent       shift, and enter state 28
			(reduce using rule 32)

	%eof           reduce using rule 32

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 97

	ClassOpDec -> LIdent ':' SType .                    (rule 31)
	SType -> SType . '->' SType                         (rule 58)

	'->'           shift, and enter state 84
	';'            reduce using rule 31
	'[]'           reduce using rule 31
	'\\'           reduce using rule 31
	'case'         reduce using rule 31
	'instance'     reduce using rule 31
	L_True         reduce using rule 31
	L_False        reduce using rule 31
	L_LIdent       reduce using rule 31
	%eof           reduce using rule 31


State 98

	InstDec -> 'instance' '<' TyC . '>' '=>' UIdent SType 'where' ListClassOpImp    (rule 35)

	'>'            shift, and enter state 107


State 99

	InstDec -> 'instance' UIdent SType . 'where' ListClassOpImp    (rule 34)
	SType -> SType . '->' SType                         (rule 58)

	'->'           shift, and enter state 84
	'where'        shift, and enter state 106


State 100

	ClassDec -> 'class' UIdent LIdent . 'where' ListClassOpDec    (rule 33)

	'where'        shift, and enter state 105


State 101

	ListExpr -> Expr ';' ListExpr .                     (rule 30)

	%eof           reduce using rule 30


State 102

	ListInstDec -> InstDec ';' ListInstDec .            (rule 27)

	'[]'           reduce using rule 27
	'\\'           reduce using rule 27
	'case'         reduce using rule 27
	L_True         reduce using rule 27
	L_False        reduce using rule 27
	L_LIdent       reduce using rule 27
	%eof           reduce using rule 27


State 103

	ListClassDec -> ClassDec ';' ListClassDec .         (rule 24)

	'[]'           reduce using rule 24
	'\\'           reduce using rule 24
	'case'         reduce using rule 24
	'instance'     reduce using rule 24
	L_True         reduce using rule 24
	L_False        reduce using rule 24
	L_LIdent       reduce using rule 24
	%eof           reduce using rule 24


State 104

	Prog -> ListClassDec ListInstDec ListExpr .         (rule 21)

	%eof           reduce using rule 21


State 105

	ClassDec -> 'class' UIdent LIdent 'where' . ListClassOpDec    (rule 33)

	';'            reduce using rule 36
	'[]'           reduce using rule 36
	'\\'           reduce using rule 36
	'case'         reduce using rule 36
	'instance'     reduce using rule 36
	L_True         reduce using rule 36
	L_False        reduce using rule 36
	L_LIdent       shift, and enter state 28
			(reduce using rule 36)

	%eof           reduce using rule 36

	LIdent         goto state 49
	ClassOpDec     goto state 50
	ListClassOpDec goto state 115

State 106

	InstDec -> 'instance' UIdent SType 'where' . ListClassOpImp    (rule 34)

	';'            reduce using rule 38
	'[]'           reduce using rule 38
	'\\'           reduce using rule 38
	'case'         reduce using rule 38
	L_True         reduce using rule 38
	L_False        reduce using rule 38
	L_LIdent       shift, and enter state 28
			(reduce using rule 38)

	%eof           reduce using rule 38

	LIdent         goto state 46
	ClassOpImp     goto state 47
	ListClassOpImp goto state 114

State 107

	InstDec -> 'instance' '<' TyC '>' . '=>' UIdent SType 'where' ListClassOpImp    (rule 35)

	'=>'           shift, and enter state 113


State 108

	Expr -> 'case' Expr 'of' List . '->' Expr ';' List '->' Expr    (rule 47)

	'->'           shift, and enter state 112


State 109

	Expr -> '\\' LIdent '->' Expr .                     (rule 43)
	Expr -> Expr . Expr                                 (rule 45)

	';'            reduce using rule 43
	'[]'           shift, and enter state 40
			(reduce using rule 43)

	'\\'           shift, and enter state 41
			(reduce using rule 43)

	'case'         shift, and enter state 42
			(reduce using rule 43)

	'of'           reduce using rule 43
	L_True         shift, and enter state 18
			(reduce using rule 43)

	L_False        shift, and enter state 43
			(reduce using rule 43)

	L_LIdent       shift, and enter state 28
			(reduce using rule 43)

	%eof           reduce using rule 43

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 110

	OvType -> '<' ListTyC '>' '=>' . SType              (rule 51)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 111

State 111

	OvType -> '<' ListTyC '>' '=>' SType .              (rule 51)
	SType -> SType . '->' SType                         (rule 58)

	'->'           shift, and enter state 84
	%eof           reduce using rule 51


State 112

	Expr -> 'case' Expr 'of' List '->' . Expr ';' List '->' Expr    (rule 47)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 117

State 113

	InstDec -> 'instance' '<' TyC '>' '=>' . UIdent SType 'where' ListClassOpImp    (rule 35)

	L_UIdent       shift, and enter state 27

	UIdent         goto state 116

State 114

	InstDec -> 'instance' UIdent SType 'where' ListClassOpImp .    (rule 34)

	';'            reduce using rule 34
	'[]'           reduce using rule 34
	'\\'           reduce using rule 34
	'case'         reduce using rule 34
	L_True         reduce using rule 34
	L_False        reduce using rule 34
	L_LIdent       reduce using rule 34
	%eof           reduce using rule 34


State 115

	ClassDec -> 'class' UIdent LIdent 'where' ListClassOpDec .    (rule 33)

	';'            reduce using rule 33
	'[]'           reduce using rule 33
	'\\'           reduce using rule 33
	'case'         reduce using rule 33
	'instance'     reduce using rule 33
	L_True         reduce using rule 33
	L_False        reduce using rule 33
	L_LIdent       reduce using rule 33
	%eof           reduce using rule 33


State 116

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent . SType 'where' ListClassOpImp    (rule 35)

	'Bool'         shift, and enter state 25
	'['            shift, and enter state 26
	L_UIdent       shift, and enter state 27
	L_LIdent       shift, and enter state 28

	UIdent         goto state 19
	LIdent         goto state 20
	SType          goto state 119

State 117

	Expr -> Expr . Expr                                 (rule 45)
	Expr -> 'case' Expr 'of' List '->' Expr . ';' List '->' Expr    (rule 47)

	';'            shift, and enter state 118
	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

State 118

	Expr -> 'case' Expr 'of' List '->' Expr ';' . List '->' Expr    (rule 47)

	'[]'           shift, and enter state 40
	L_LIdent       shift, and enter state 28

	LIdent         goto state 44
	List           goto state 121

State 119

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType . 'where' ListClassOpImp    (rule 35)
	SType -> SType . '->' SType                         (rule 58)

	'->'           shift, and enter state 84
	'where'        shift, and enter state 120


State 120

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType 'where' . ListClassOpImp    (rule 35)

	';'            reduce using rule 38
	'[]'           reduce using rule 38
	'\\'           reduce using rule 38
	'case'         reduce using rule 38
	L_True         reduce using rule 38
	L_False        reduce using rule 38
	L_LIdent       shift, and enter state 28
			(reduce using rule 38)

	%eof           reduce using rule 38

	LIdent         goto state 46
	ClassOpImp     goto state 47
	ListClassOpImp goto state 123

State 121

	Expr -> 'case' Expr 'of' List '->' Expr ';' List . '->' Expr    (rule 47)

	'->'           shift, and enter state 122


State 122

	Expr -> 'case' Expr 'of' List '->' Expr ';' List '->' . Expr    (rule 47)

	'[]'           shift, and enter state 40
	'\\'           shift, and enter state 41
	'case'         shift, and enter state 42
	L_True         shift, and enter state 18
	L_False        shift, and enter state 43
	L_LIdent       shift, and enter state 28

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 124

State 123

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType 'where' ListClassOpImp .    (rule 35)

	';'            reduce using rule 35
	'[]'           reduce using rule 35
	'\\'           reduce using rule 35
	'case'         reduce using rule 35
	L_True         reduce using rule 35
	L_False        reduce using rule 35
	L_LIdent       reduce using rule 35
	%eof           reduce using rule 35


State 124

	Expr -> Expr . Expr                                 (rule 45)
	Expr -> 'case' Expr 'of' List '->' Expr ';' List '->' Expr .    (rule 47)

	';'            reduce using rule 47
	'[]'           shift, and enter state 40
			(reduce using rule 47)

	'\\'           shift, and enter state 41
			(reduce using rule 47)

	'case'         shift, and enter state 42
			(reduce using rule 47)

	'of'           reduce using rule 47
	L_True         shift, and enter state 18
			(reduce using rule 47)

	L_False        shift, and enter state 43
			(reduce using rule 47)

	L_LIdent       shift, and enter state 28
			(reduce using rule 47)

	%eof           reduce using rule 47

	True           goto state 35
	False          goto state 36
	LIdent         goto state 37
	List           goto state 38
	Expr           goto state 69

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 62
Number of terminals: 22
Number of non-terminals: 38
Number of states: 125
