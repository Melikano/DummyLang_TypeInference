-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Dummy/Par.y
-----------------------------------------------------------------------------

state 54 contains 1 shift/reduce conflicts.
state 57 contains 1 shift/reduce conflicts.
state 76 contains 8 shift/reduce conflicts.
state 98 contains 1 shift/reduce conflicts.
state 101 contains 8 shift/reduce conflicts.
state 104 contains 7 shift/reduce conflicts.
state 110 contains 8 shift/reduce conflicts.
state 114 contains 1 shift/reduce conflicts.
state 115 contains 1 shift/reduce conflicts.
state 118 contains 8 shift/reduce conflicts.
state 129 contains 1 shift/reduce conflicts.
state 133 contains 8 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pListClassDec -> ListClassDec               (1)
	%start_pListInstDec -> ListInstDec                 (2)
	%start_pListExpr -> ListExpr                       (3)
	%start_pClassOpDec -> ClassOpDec                   (4)
	%start_pClassOpImp -> ClassOpImp                   (5)
	%start_pClassDec -> ClassDec                       (6)
	%start_pInstDec -> InstDec                         (7)
	%start_pListClassOpDec -> ListClassOpDec           (8)
	%start_pListClassOpImp -> ListClassOpImp           (9)
	%start_pList -> List                               (10)
	%start_pExpr -> Expr                               (11)
	%start_pExpr2 -> Expr2                             (12)
	%start_pExpr1 -> Expr1                             (13)
	%start_pTyC -> TyC                                 (14)
	%start_pOvType -> OvType                           (15)
	%start_pListTyC -> ListTyC                         (16)
	%start_pSType -> SType                             (17)
	%start_pDType -> DType                             (18)
	DTrue -> L_DTrue                                   (19)
	DFalse -> L_DFalse                                 (20)
	UIdent -> L_UIdent                                 (21)
	LIdent -> L_LIdent                                 (22)
	Prog -> ListClassDec ListInstDec ListExpr          (23)
	ListClassDec ->                                    (24)
	ListClassDec -> ClassDec                           (25)
	ListClassDec -> ClassDec ';' ListClassDec          (26)
	ListInstDec ->                                     (27)
	ListInstDec -> InstDec                             (28)
	ListInstDec -> InstDec ';' ListInstDec             (29)
	ListExpr ->                                        (30)
	ListExpr -> Expr                                   (31)
	ListExpr -> Expr ';' ListExpr                      (32)
	ClassOpDec -> LIdent ':' SType                     (33)
	ClassOpImp -> LIdent '=' Expr                      (34)
	ClassDec -> 'class' UIdent LIdent 'where' ListClassOpDec   (35)
	InstDec -> 'instance' UIdent SType 'where' ListClassOpImp   (36)
	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType 'where' ListClassOpImp   (37)
	ListClassOpDec ->                                  (38)
	ListClassOpDec -> ClassOpDec ListClassOpDec        (39)
	ListClassOpImp ->                                  (40)
	ListClassOpImp -> ClassOpImp ListClassOpImp        (41)
	List -> '[]'                                       (42)
	List -> Expr ':' Expr                              (43)
	Expr -> LIdent '=' Expr                            (44)
	Expr -> '\\' LIdent '->' Expr                      (45)
	Expr -> LIdent                                     (46)
	Expr -> Expr Expr                                  (47)
	Expr -> List                                       (48)
	Expr -> 'case' Expr 'of' List '->' Expr ';' List '->' Expr   (49)
	Expr -> DTrue                                      (50)
	Expr -> DFalse                                     (51)
	Expr -> Expr1                                      (52)
	Expr2 -> '(' Expr ')'                              (53)
	Expr1 -> Expr2                                     (54)
	TyC -> UIdent SType                                (55)
	OvType -> '<' ListTyC '>' '=>' SType               (56)
	ListTyC ->                                         (57)
	ListTyC -> TyC                                     (58)
	ListTyC -> TyC ',' ListTyC                         (59)
	SType -> LIdent                                    (60)
	SType -> UIdent LIdent                             (61)
	SType -> 'Bool'                                    (62)
	SType -> SType '->' SType                          (63)
	SType -> '[' SType ']'                             (64)
	DType -> OvType                                    (65)
	DType -> SType                                     (66)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'<'            { PT _ (TS _ 7) }
	'='            { PT _ (TS _ 8) }
	'=>'           { PT _ (TS _ 9) }
	'>'            { PT _ (TS _ 10) }
	'Bool'         { PT _ (TS _ 11) }
	'['            { PT _ (TS _ 12) }
	'[]'           { PT _ (TS _ 13) }
	'\\'           { PT _ (TS _ 14) }
	']'            { PT _ (TS _ 15) }
	'case'         { PT _ (TS _ 16) }
	'class'        { PT _ (TS _ 17) }
	'instance'     { PT _ (TS _ 18) }
	'of'           { PT _ (TS _ 19) }
	'where'        { PT _ (TS _ 20) }
	L_DTrue        { PT _ (T_DTrue $$) }
	L_DFalse       { PT _ (T_DFalse $$) }
	L_UIdent       { PT _ (T_UIdent $$) }
	L_LIdent       { PT _ (T_LIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pListClassDec rule  1
	%start_pListInstDec rule  2
	%start_pListExpr rule  3
	%start_pClassOpDec rule  4
	%start_pClassOpImp rule  5
	%start_pClassDec rule  6
	%start_pInstDec rule  7
	%start_pListClassOpDec rule  8
	%start_pListClassOpImp rule  9
	%start_pList    rule  10
	%start_pExpr    rule  11
	%start_pExpr2   rule  12
	%start_pExpr1   rule  13
	%start_pTyC     rule  14
	%start_pOvType  rule  15
	%start_pListTyC rule  16
	%start_pSType   rule  17
	%start_pDType   rule  18
	DTrue           rule  19
	DFalse          rule  20
	UIdent          rule  21
	LIdent          rule  22
	Prog            rule  23
	ListClassDec    rules 24, 25, 26
	ListInstDec     rules 27, 28, 29
	ListExpr        rules 30, 31, 32
	ClassOpDec      rule  33
	ClassOpImp      rule  34
	ClassDec        rule  35
	InstDec         rules 36, 37
	ListClassOpDec  rules 38, 39
	ListClassOpImp  rules 40, 41
	List            rules 42, 43
	Expr            rules 44, 45, 46, 47, 48, 49, 50, 51, 52
	Expr2           rule  53
	Expr1           rule  54
	TyC             rule  55
	OvType          rule  56
	ListTyC         rules 57, 58, 59
	SType           rules 60, 61, 62, 63, 64
	DType           rules 65, 66

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProg -> . Prog                              (rule 0)

	'('            reduce using rule 24
	'[]'           reduce using rule 24
	'\\'           reduce using rule 24
	'case'         reduce using rule 24
	'class'        shift, and enter state 62
	'instance'     reduce using rule 24
	L_DTrue        reduce using rule 24
	L_DFalse       reduce using rule 24
	L_LIdent       reduce using rule 24
	%eof           reduce using rule 24

	Prog           goto state 71
	ListClassDec   goto state 72
	ClassDec       goto state 70

State 1

	%start_pListClassDec -> . ListClassDec              (rule 1)

	'class'        shift, and enter state 62
	%eof           reduce using rule 24

	ListClassDec   goto state 69
	ClassDec       goto state 70

State 2

	%start_pListInstDec -> . ListInstDec                (rule 2)

	'instance'     shift, and enter state 60
	%eof           reduce using rule 27

	ListInstDec    goto state 67
	InstDec        goto state 68

State 3

	%start_pListExpr -> . ListExpr                      (rule 3)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30
	%eof           reduce using rule 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	ListExpr       goto state 65
	List           goto state 44
	Expr           goto state 66
	Expr2          goto state 37
	Expr1          goto state 46

State 4

	%start_pClassOpDec -> . ClassOpDec                  (rule 4)

	L_LIdent       shift, and enter state 30

	LIdent         goto state 56
	ClassOpDec     goto state 64

State 5

	%start_pClassOpImp -> . ClassOpImp                  (rule 5)

	L_LIdent       shift, and enter state 30

	LIdent         goto state 53
	ClassOpImp     goto state 63

State 6

	%start_pClassDec -> . ClassDec                      (rule 6)

	'class'        shift, and enter state 62

	ClassDec       goto state 61

State 7

	%start_pInstDec -> . InstDec                        (rule 7)

	'instance'     shift, and enter state 60

	InstDec        goto state 59

State 8

	%start_pListClassOpDec -> . ListClassOpDec          (rule 8)

	L_LIdent       shift, and enter state 30
	%eof           reduce using rule 38

	LIdent         goto state 56
	ClassOpDec     goto state 57
	ListClassOpDec goto state 58

State 9

	%start_pListClassOpImp -> . ListClassOpImp          (rule 9)

	L_LIdent       shift, and enter state 30
	%eof           reduce using rule 40

	LIdent         goto state 53
	ClassOpImp     goto state 54
	ListClassOpImp goto state 55

State 10

	%start_pList -> . List                              (rule 10)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 51
	Expr           goto state 52
	Expr2          goto state 37
	Expr1          goto state 46

State 11

	%start_pExpr -> . Expr                              (rule 11)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 45
	Expr2          goto state 37
	Expr1          goto state 46

State 12

	%start_pExpr2 -> . Expr2                            (rule 12)

	'('            shift, and enter state 39

	Expr2          goto state 40

State 13

	%start_pExpr1 -> . Expr1                            (rule 13)

	'('            shift, and enter state 39

	Expr2          goto state 37
	Expr1          goto state 38

State 14

	%start_pTyC -> . TyC                                (rule 14)

	L_UIdent       shift, and enter state 29

	UIdent         goto state 32
	TyC            goto state 36

State 15

	%start_pOvType -> . OvType                          (rule 15)

	'<'            shift, and enter state 26

	OvType         goto state 35

State 16

	%start_pListTyC -> . ListTyC                        (rule 16)

	L_UIdent       shift, and enter state 29
	%eof           reduce using rule 57

	UIdent         goto state 32
	TyC            goto state 33
	ListTyC        goto state 34

State 17

	%start_pSType -> . SType                            (rule 17)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 31

State 18

	%start_pDType -> . DType                            (rule 18)

	'<'            shift, and enter state 26
	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	OvType         goto state 23
	SType          goto state 24
	DType          goto state 25

State 19

	DTrue -> . L_DTrue                                  (rule 19)

	L_DTrue        shift, and enter state 20


State 20

	DTrue -> L_DTrue .                                  (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'->'           reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	'[]'           reduce using rule 19
	'\\'           reduce using rule 19
	'case'         reduce using rule 19
	'of'           reduce using rule 19
	L_DTrue        reduce using rule 19
	L_DFalse       reduce using rule 19
	L_LIdent       reduce using rule 19
	%eof           reduce using rule 19


State 21

	SType -> UIdent . LIdent                            (rule 61)

	L_LIdent       shift, and enter state 30

	LIdent         goto state 95

State 22

	SType -> LIdent .                                   (rule 60)

	'('            reduce using rule 60
	','            reduce using rule 60
	'->'           reduce using rule 60
	';'            reduce using rule 60
	'>'            reduce using rule 60
	'[]'           reduce using rule 60
	'\\'           reduce using rule 60
	']'            reduce using rule 60
	'case'         reduce using rule 60
	'instance'     reduce using rule 60
	'where'        reduce using rule 60
	L_DTrue        reduce using rule 60
	L_DFalse       reduce using rule 60
	L_LIdent       reduce using rule 60
	%eof           reduce using rule 60


State 23

	DType -> OvType .                                   (rule 65)

	%eof           reduce using rule 65


State 24

	SType -> SType . '->' SType                         (rule 63)
	DType -> SType .                                    (rule 66)

	'->'           shift, and enter state 92
	%eof           reduce using rule 66


State 25

	%start_pDType -> DType .                            (rule 18)

	%eof           accept


State 26

	OvType -> '<' . ListTyC '>' '=>' SType              (rule 56)

	'>'            reduce using rule 57
	L_UIdent       shift, and enter state 29

	UIdent         goto state 32
	TyC            goto state 33
	ListTyC        goto state 94

State 27

	SType -> 'Bool' .                                   (rule 62)

	'('            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	';'            reduce using rule 62
	'>'            reduce using rule 62
	'[]'           reduce using rule 62
	'\\'           reduce using rule 62
	']'            reduce using rule 62
	'case'         reduce using rule 62
	'instance'     reduce using rule 62
	'where'        reduce using rule 62
	L_DTrue        reduce using rule 62
	L_DFalse       reduce using rule 62
	L_LIdent       reduce using rule 62
	%eof           reduce using rule 62


State 28

	SType -> '[' . SType ']'                            (rule 64)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 93

State 29

	UIdent -> L_UIdent .                                (rule 21)

	'Bool'         reduce using rule 21
	'['            reduce using rule 21
	L_UIdent       reduce using rule 21
	L_LIdent       reduce using rule 21


State 30

	LIdent -> L_LIdent .                                (rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'->'           reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'='            reduce using rule 22
	'>'            reduce using rule 22
	'[]'           reduce using rule 22
	'\\'           reduce using rule 22
	']'            reduce using rule 22
	'case'         reduce using rule 22
	'instance'     reduce using rule 22
	'of'           reduce using rule 22
	'where'        reduce using rule 22
	L_DTrue        reduce using rule 22
	L_DFalse       reduce using rule 22
	L_LIdent       reduce using rule 22
	%eof           reduce using rule 22


State 31

	%start_pSType -> SType .                            (rule 17)
	SType -> SType . '->' SType                         (rule 63)

	'->'           shift, and enter state 92
	%eof           accept


State 32

	TyC -> UIdent . SType                               (rule 55)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 91

State 33

	ListTyC -> TyC .                                    (rule 58)
	ListTyC -> TyC . ',' ListTyC                        (rule 59)

	','            shift, and enter state 90
	'>'            reduce using rule 58
	%eof           reduce using rule 58


State 34

	%start_pListTyC -> ListTyC .                        (rule 16)

	%eof           accept


State 35

	%start_pOvType -> OvType .                          (rule 15)

	%eof           accept


State 36

	%start_pTyC -> TyC .                                (rule 14)

	%eof           accept


State 37

	Expr1 -> Expr2 .                                    (rule 54)

	'('            reduce using rule 54
	')'            reduce using rule 54
	'->'           reduce using rule 54
	':'            reduce using rule 54
	';'            reduce using rule 54
	'[]'           reduce using rule 54
	'\\'           reduce using rule 54
	'case'         reduce using rule 54
	'of'           reduce using rule 54
	L_DTrue        reduce using rule 54
	L_DFalse       reduce using rule 54
	L_LIdent       reduce using rule 54
	%eof           reduce using rule 54


State 38

	%start_pExpr1 -> Expr1 .                            (rule 13)

	%eof           accept


State 39

	Expr2 -> '(' . Expr ')'                             (rule 53)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 89
	Expr2          goto state 37
	Expr1          goto state 46

State 40

	%start_pExpr2 -> Expr2 .                            (rule 12)

	%eof           accept


State 41

	Expr -> DTrue .                                     (rule 50)

	'('            reduce using rule 50
	')'            reduce using rule 50
	'->'           reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'[]'           reduce using rule 50
	'\\'           reduce using rule 50
	'case'         reduce using rule 50
	'of'           reduce using rule 50
	L_DTrue        reduce using rule 50
	L_DFalse       reduce using rule 50
	L_LIdent       reduce using rule 50
	%eof           reduce using rule 50


State 42

	Expr -> DFalse .                                    (rule 51)

	'('            reduce using rule 51
	')'            reduce using rule 51
	'->'           reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'[]'           reduce using rule 51
	'\\'           reduce using rule 51
	'case'         reduce using rule 51
	'of'           reduce using rule 51
	L_DTrue        reduce using rule 51
	L_DFalse       reduce using rule 51
	L_LIdent       reduce using rule 51
	%eof           reduce using rule 51


State 43

	Expr -> LIdent . '=' Expr                           (rule 44)
	Expr -> LIdent .                                    (rule 46)

	'('            reduce using rule 46
	')'            reduce using rule 46
	'->'           reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'='            shift, and enter state 88
	'[]'           reduce using rule 46
	'\\'           reduce using rule 46
	'case'         reduce using rule 46
	'of'           reduce using rule 46
	L_DTrue        reduce using rule 46
	L_DFalse       reduce using rule 46
	L_LIdent       reduce using rule 46
	%eof           reduce using rule 46


State 44

	Expr -> List .                                      (rule 48)

	'('            reduce using rule 48
	')'            reduce using rule 48
	'->'           reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'[]'           reduce using rule 48
	'\\'           reduce using rule 48
	'case'         reduce using rule 48
	'of'           reduce using rule 48
	L_DTrue        reduce using rule 48
	L_DFalse       reduce using rule 48
	L_LIdent       reduce using rule 48
	%eof           reduce using rule 48


State 45

	%start_pExpr -> Expr .                              (rule 11)
	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
	':'            shift, and enter state 77
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30
	%eof           accept

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 46

	Expr -> Expr1 .                                     (rule 52)

	'('            reduce using rule 52
	')'            reduce using rule 52
	'->'           reduce using rule 52
	':'            reduce using rule 52
	';'            reduce using rule 52
	'[]'           reduce using rule 52
	'\\'           reduce using rule 52
	'case'         reduce using rule 52
	'of'           reduce using rule 52
	L_DTrue        reduce using rule 52
	L_DFalse       reduce using rule 52
	L_LIdent       reduce using rule 52
	%eof           reduce using rule 52


State 47

	List -> '[]' .                                      (rule 42)

	'('            reduce using rule 42
	')'            reduce using rule 42
	'->'           reduce using rule 42
	':'            reduce using rule 42
	';'            reduce using rule 42
	'[]'           reduce using rule 42
	'\\'           reduce using rule 42
	'case'         reduce using rule 42
	'of'           reduce using rule 42
	L_DTrue        reduce using rule 42
	L_DFalse       reduce using rule 42
	L_LIdent       reduce using rule 42
	%eof           reduce using rule 42


State 48

	Expr -> '\\' . LIdent '->' Expr                     (rule 45)

	L_LIdent       shift, and enter state 30

	LIdent         goto state 87

State 49

	Expr -> 'case' . Expr 'of' List '->' Expr ';' List '->' Expr    (rule 49)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 86
	Expr2          goto state 37
	Expr1          goto state 46

State 50

	DFalse -> L_DFalse .                                (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'->'           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'[]'           reduce using rule 20
	'\\'           reduce using rule 20
	'case'         reduce using rule 20
	'of'           reduce using rule 20
	L_DTrue        reduce using rule 20
	L_DFalse       reduce using rule 20
	L_LIdent       reduce using rule 20
	%eof           reduce using rule 20


State 51

	%start_pList -> List .                              (rule 10)
	Expr -> List .                                      (rule 48)

	'('            reduce using rule 48
	':'            reduce using rule 48
	'[]'           reduce using rule 48
	'\\'           reduce using rule 48
	'case'         reduce using rule 48
	L_DTrue        reduce using rule 48
	L_DFalse       reduce using rule 48
	L_LIdent       reduce using rule 48
	%eof           accept


State 52

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
	':'            shift, and enter state 77
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 53

	ClassOpImp -> LIdent . '=' Expr                     (rule 34)

	'='            shift, and enter state 85


State 54

	ListClassOpImp -> ClassOpImp . ListClassOpImp       (rule 41)

	'('            reduce using rule 40
	';'            reduce using rule 40
	'[]'           reduce using rule 40
	'\\'           reduce using rule 40
	'case'         reduce using rule 40
	L_DTrue        reduce using rule 40
	L_DFalse       reduce using rule 40
	L_LIdent       shift, and enter state 30
			(reduce using rule 40)

	%eof           reduce using rule 40

	LIdent         goto state 53
	ClassOpImp     goto state 54
	ListClassOpImp goto state 84

State 55

	%start_pListClassOpImp -> ListClassOpImp .          (rule 9)

	%eof           accept


State 56

	ClassOpDec -> LIdent . ':' SType                    (rule 33)

	':'            shift, and enter state 83


State 57

	ListClassOpDec -> ClassOpDec . ListClassOpDec       (rule 39)

	'('            reduce using rule 38
	';'            reduce using rule 38
	'[]'           reduce using rule 38
	'\\'           reduce using rule 38
	'case'         reduce using rule 38
	'instance'     reduce using rule 38
	L_DTrue        reduce using rule 38
	L_DFalse       reduce using rule 38
	L_LIdent       shift, and enter state 30
			(reduce using rule 38)

	%eof           reduce using rule 38

	LIdent         goto state 56
	ClassOpDec     goto state 57
	ListClassOpDec goto state 82

State 58

	%start_pListClassOpDec -> ListClassOpDec .          (rule 8)

	%eof           accept


State 59

	%start_pInstDec -> InstDec .                        (rule 7)

	%eof           accept


State 60

	InstDec -> 'instance' . UIdent SType 'where' ListClassOpImp    (rule 36)
	InstDec -> 'instance' . '<' TyC '>' '=>' UIdent SType 'where' ListClassOpImp    (rule 37)

	'<'            shift, and enter state 81
	L_UIdent       shift, and enter state 29

	UIdent         goto state 80

State 61

	%start_pClassDec -> ClassDec .                      (rule 6)

	%eof           accept


State 62

	ClassDec -> 'class' . UIdent LIdent 'where' ListClassOpDec    (rule 35)

	L_UIdent       shift, and enter state 29

	UIdent         goto state 79

State 63

	%start_pClassOpImp -> ClassOpImp .                  (rule 5)

	%eof           accept


State 64

	%start_pClassOpDec -> ClassOpDec .                  (rule 4)

	%eof           accept


State 65

	%start_pListExpr -> ListExpr .                      (rule 3)

	%eof           accept


State 66

	ListExpr -> Expr .                                  (rule 31)
	ListExpr -> Expr . ';' ListExpr                     (rule 32)
	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
	':'            shift, and enter state 77
	';'            shift, and enter state 78
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30
	%eof           reduce using rule 31

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 67

	%start_pListInstDec -> ListInstDec .                (rule 2)

	%eof           accept


State 68

	ListInstDec -> InstDec .                            (rule 28)
	ListInstDec -> InstDec . ';' ListInstDec            (rule 29)

	'('            reduce using rule 28
	';'            shift, and enter state 75
	'[]'           reduce using rule 28
	'\\'           reduce using rule 28
	'case'         reduce using rule 28
	L_DTrue        reduce using rule 28
	L_DFalse       reduce using rule 28
	L_LIdent       reduce using rule 28
	%eof           reduce using rule 28


State 69

	%start_pListClassDec -> ListClassDec .              (rule 1)

	%eof           accept


State 70

	ListClassDec -> ClassDec .                          (rule 25)
	ListClassDec -> ClassDec . ';' ListClassDec         (rule 26)

	'('            reduce using rule 25
	';'            shift, and enter state 74
	'[]'           reduce using rule 25
	'\\'           reduce using rule 25
	'case'         reduce using rule 25
	'instance'     reduce using rule 25
	L_DTrue        reduce using rule 25
	L_DFalse       reduce using rule 25
	L_LIdent       reduce using rule 25
	%eof           reduce using rule 25


State 71

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 72

	Prog -> ListClassDec . ListInstDec ListExpr         (rule 23)

	'('            reduce using rule 27
	'[]'           reduce using rule 27
	'\\'           reduce using rule 27
	'case'         reduce using rule 27
	'instance'     shift, and enter state 60
	L_DTrue        reduce using rule 27
	L_DFalse       reduce using rule 27
	L_LIdent       reduce using rule 27
	%eof           reduce using rule 27

	ListInstDec    goto state 73
	InstDec        goto state 68

State 73

	Prog -> ListClassDec ListInstDec . ListExpr         (rule 23)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30
	%eof           reduce using rule 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	ListExpr       goto state 113
	List           goto state 44
	Expr           goto state 66
	Expr2          goto state 37
	Expr1          goto state 46

State 74

	ListClassDec -> ClassDec ';' . ListClassDec         (rule 26)

	'('            reduce using rule 24
	'[]'           reduce using rule 24
	'\\'           reduce using rule 24
	'case'         reduce using rule 24
	'class'        shift, and enter state 62
	'instance'     reduce using rule 24
	L_DTrue        reduce using rule 24
	L_DFalse       reduce using rule 24
	L_LIdent       reduce using rule 24
	%eof           reduce using rule 24

	ListClassDec   goto state 112
	ClassDec       goto state 70

State 75

	ListInstDec -> InstDec ';' . ListInstDec            (rule 29)

	'('            reduce using rule 27
	'[]'           reduce using rule 27
	'\\'           reduce using rule 27
	'case'         reduce using rule 27
	'instance'     shift, and enter state 60
	L_DTrue        reduce using rule 27
	L_DFalse       reduce using rule 27
	L_LIdent       reduce using rule 27
	%eof           reduce using rule 27

	ListInstDec    goto state 111
	InstDec        goto state 68

State 76

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)
	Expr -> Expr Expr .                                 (rule 47)

	'('            shift, and enter state 39
			(reduce using rule 47)

	')'            reduce using rule 47
	'->'           reduce using rule 47
	':'            shift, and enter state 77
			(reduce using rule 47)

	';'            reduce using rule 47
	'[]'           shift, and enter state 47
			(reduce using rule 47)

	'\\'           shift, and enter state 48
			(reduce using rule 47)

	'case'         shift, and enter state 49
			(reduce using rule 47)

	'of'           reduce using rule 47
	L_DTrue        shift, and enter state 20
			(reduce using rule 47)

	L_DFalse       shift, and enter state 50
			(reduce using rule 47)

	L_LIdent       shift, and enter state 30
			(reduce using rule 47)

	%eof           reduce using rule 47

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 77

	List -> Expr ':' . Expr                             (rule 43)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 110
	Expr2          goto state 37
	Expr1          goto state 46

State 78

	ListExpr -> Expr ';' . ListExpr                     (rule 32)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30
	%eof           reduce using rule 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	ListExpr       goto state 109
	List           goto state 44
	Expr           goto state 66
	Expr2          goto state 37
	Expr1          goto state 46

State 79

	ClassDec -> 'class' UIdent . LIdent 'where' ListClassOpDec    (rule 35)

	L_LIdent       shift, and enter state 30

	LIdent         goto state 108

State 80

	InstDec -> 'instance' UIdent . SType 'where' ListClassOpImp    (rule 36)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 107

State 81

	InstDec -> 'instance' '<' . TyC '>' '=>' UIdent SType 'where' ListClassOpImp    (rule 37)

	L_UIdent       shift, and enter state 29

	UIdent         goto state 32
	TyC            goto state 106

State 82

	ListClassOpDec -> ClassOpDec ListClassOpDec .       (rule 39)

	'('            reduce using rule 39
	';'            reduce using rule 39
	'[]'           reduce using rule 39
	'\\'           reduce using rule 39
	'case'         reduce using rule 39
	'instance'     reduce using rule 39
	L_DTrue        reduce using rule 39
	L_DFalse       reduce using rule 39
	L_LIdent       reduce using rule 39
	%eof           reduce using rule 39


State 83

	ClassOpDec -> LIdent ':' . SType                    (rule 33)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 105

State 84

	ListClassOpImp -> ClassOpImp ListClassOpImp .       (rule 41)

	'('            reduce using rule 41
	';'            reduce using rule 41
	'[]'           reduce using rule 41
	'\\'           reduce using rule 41
	'case'         reduce using rule 41
	L_DTrue        reduce using rule 41
	L_DFalse       reduce using rule 41
	L_LIdent       reduce using rule 41
	%eof           reduce using rule 41


State 85

	ClassOpImp -> LIdent '=' . Expr                     (rule 34)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 104
	Expr2          goto state 37
	Expr1          goto state 46

State 86

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)
	Expr -> 'case' Expr . 'of' List '->' Expr ';' List '->' Expr    (rule 49)

	'('            shift, and enter state 39
	':'            shift, and enter state 77
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	'of'           shift, and enter state 103
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 87

	Expr -> '\\' LIdent . '->' Expr                     (rule 45)

	'->'           shift, and enter state 102


State 88

	Expr -> LIdent '=' . Expr                           (rule 44)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 101
	Expr2          goto state 37
	Expr1          goto state 46

State 89

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)
	Expr2 -> '(' Expr . ')'                             (rule 53)

	'('            shift, and enter state 39
	')'            shift, and enter state 100
	':'            shift, and enter state 77
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 90

	ListTyC -> TyC ',' . ListTyC                        (rule 59)

	'>'            reduce using rule 57
	L_UIdent       shift, and enter state 29
	%eof           reduce using rule 57

	UIdent         goto state 32
	TyC            goto state 33
	ListTyC        goto state 99

State 91

	TyC -> UIdent SType .                               (rule 55)
	SType -> SType . '->' SType                         (rule 63)

	','            reduce using rule 55
	'->'           shift, and enter state 92
	'>'            reduce using rule 55
	%eof           reduce using rule 55


State 92

	SType -> SType '->' . SType                         (rule 63)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 98

State 93

	SType -> SType . '->' SType                         (rule 63)
	SType -> '[' SType . ']'                            (rule 64)

	'->'           shift, and enter state 92
	']'            shift, and enter state 97


State 94

	OvType -> '<' ListTyC . '>' '=>' SType              (rule 56)

	'>'            shift, and enter state 96


State 95

	SType -> UIdent LIdent .                            (rule 61)

	'('            reduce using rule 61
	','            reduce using rule 61
	'->'           reduce using rule 61
	';'            reduce using rule 61
	'>'            reduce using rule 61
	'[]'           reduce using rule 61
	'\\'           reduce using rule 61
	']'            reduce using rule 61
	'case'         reduce using rule 61
	'instance'     reduce using rule 61
	'where'        reduce using rule 61
	L_DTrue        reduce using rule 61
	L_DFalse       reduce using rule 61
	L_LIdent       reduce using rule 61
	%eof           reduce using rule 61


State 96

	OvType -> '<' ListTyC '>' . '=>' SType              (rule 56)

	'=>'           shift, and enter state 119


State 97

	SType -> '[' SType ']' .                            (rule 64)

	'('            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'>'            reduce using rule 64
	'[]'           reduce using rule 64
	'\\'           reduce using rule 64
	']'            reduce using rule 64
	'case'         reduce using rule 64
	'instance'     reduce using rule 64
	'where'        reduce using rule 64
	L_DTrue        reduce using rule 64
	L_DFalse       reduce using rule 64
	L_LIdent       reduce using rule 64
	%eof           reduce using rule 64


State 98

	SType -> SType . '->' SType                         (rule 63)
	SType -> SType '->' SType .                         (rule 63)

	'('            reduce using rule 63
	','            reduce using rule 63
	'->'           shift, and enter state 92
			(reduce using rule 63)

	';'            reduce using rule 63
	'>'            reduce using rule 63
	'[]'           reduce using rule 63
	'\\'           reduce using rule 63
	']'            reduce using rule 63
	'case'         reduce using rule 63
	'instance'     reduce using rule 63
	'where'        reduce using rule 63
	L_DTrue        reduce using rule 63
	L_DFalse       reduce using rule 63
	L_LIdent       reduce using rule 63
	%eof           reduce using rule 63


State 99

	ListTyC -> TyC ',' ListTyC .                        (rule 59)

	'>'            reduce using rule 59
	%eof           reduce using rule 59


State 100

	Expr2 -> '(' Expr ')' .                             (rule 53)

	'('            reduce using rule 53
	')'            reduce using rule 53
	'->'           reduce using rule 53
	':'            reduce using rule 53
	';'            reduce using rule 53
	'[]'           reduce using rule 53
	'\\'           reduce using rule 53
	'case'         reduce using rule 53
	'of'           reduce using rule 53
	L_DTrue        reduce using rule 53
	L_DFalse       reduce using rule 53
	L_LIdent       reduce using rule 53
	%eof           reduce using rule 53


State 101

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> LIdent '=' Expr .                           (rule 44)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
			(reduce using rule 44)

	')'            reduce using rule 44
	'->'           reduce using rule 44
	':'            shift, and enter state 77
			(reduce using rule 44)

	';'            reduce using rule 44
	'[]'           shift, and enter state 47
			(reduce using rule 44)

	'\\'           shift, and enter state 48
			(reduce using rule 44)

	'case'         shift, and enter state 49
			(reduce using rule 44)

	'of'           reduce using rule 44
	L_DTrue        shift, and enter state 20
			(reduce using rule 44)

	L_DFalse       shift, and enter state 50
			(reduce using rule 44)

	L_LIdent       shift, and enter state 30
			(reduce using rule 44)

	%eof           reduce using rule 44

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 102

	Expr -> '\\' LIdent '->' . Expr                     (rule 45)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 118
	Expr2          goto state 37
	Expr1          goto state 46

State 103

	Expr -> 'case' Expr 'of' . List '->' Expr ';' List '->' Expr    (rule 49)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 117
	Expr           goto state 52
	Expr2          goto state 37
	Expr1          goto state 46

State 104

	ClassOpImp -> LIdent '=' Expr .                     (rule 34)
	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
			(reduce using rule 34)

	':'            shift, and enter state 77
	';'            reduce using rule 34
	'[]'           shift, and enter state 47
			(reduce using rule 34)

	'\\'           shift, and enter state 48
			(reduce using rule 34)

	'case'         shift, and enter state 49
			(reduce using rule 34)

	L_DTrue        shift, and enter state 20
			(reduce using rule 34)

	L_DFalse       shift, and enter state 50
			(reduce using rule 34)

	L_LIdent       shift, and enter state 30
			(reduce using rule 34)

	%eof           reduce using rule 34

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 105

	ClassOpDec -> LIdent ':' SType .                    (rule 33)
	SType -> SType . '->' SType                         (rule 63)

	'('            reduce using rule 33
	'->'           shift, and enter state 92
	';'            reduce using rule 33
	'[]'           reduce using rule 33
	'\\'           reduce using rule 33
	'case'         reduce using rule 33
	'instance'     reduce using rule 33
	L_DTrue        reduce using rule 33
	L_DFalse       reduce using rule 33
	L_LIdent       reduce using rule 33
	%eof           reduce using rule 33


State 106

	InstDec -> 'instance' '<' TyC . '>' '=>' UIdent SType 'where' ListClassOpImp    (rule 37)

	'>'            shift, and enter state 116


State 107

	InstDec -> 'instance' UIdent SType . 'where' ListClassOpImp    (rule 36)
	SType -> SType . '->' SType                         (rule 63)

	'->'           shift, and enter state 92
	'where'        shift, and enter state 115


State 108

	ClassDec -> 'class' UIdent LIdent . 'where' ListClassOpDec    (rule 35)

	'where'        shift, and enter state 114


State 109

	ListExpr -> Expr ';' ListExpr .                     (rule 32)

	%eof           reduce using rule 32


State 110

	List -> Expr . ':' Expr                             (rule 43)
	List -> Expr ':' Expr .                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
			(reduce using rule 43)

	')'            reduce using rule 43
	'->'           reduce using rule 43
	':'            shift, and enter state 77
			(reduce using rule 43)

	';'            reduce using rule 43
	'[]'           shift, and enter state 47
			(reduce using rule 43)

	'\\'           shift, and enter state 48
			(reduce using rule 43)

	'case'         shift, and enter state 49
			(reduce using rule 43)

	'of'           reduce using rule 43
	L_DTrue        shift, and enter state 20
			(reduce using rule 43)

	L_DFalse       shift, and enter state 50
			(reduce using rule 43)

	L_LIdent       shift, and enter state 30
			(reduce using rule 43)

	%eof           reduce using rule 43

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 111

	ListInstDec -> InstDec ';' ListInstDec .            (rule 29)

	'('            reduce using rule 29
	'[]'           reduce using rule 29
	'\\'           reduce using rule 29
	'case'         reduce using rule 29
	L_DTrue        reduce using rule 29
	L_DFalse       reduce using rule 29
	L_LIdent       reduce using rule 29
	%eof           reduce using rule 29


State 112

	ListClassDec -> ClassDec ';' ListClassDec .         (rule 26)

	'('            reduce using rule 26
	'[]'           reduce using rule 26
	'\\'           reduce using rule 26
	'case'         reduce using rule 26
	'instance'     reduce using rule 26
	L_DTrue        reduce using rule 26
	L_DFalse       reduce using rule 26
	L_LIdent       reduce using rule 26
	%eof           reduce using rule 26


State 113

	Prog -> ListClassDec ListInstDec ListExpr .         (rule 23)

	%eof           reduce using rule 23


State 114

	ClassDec -> 'class' UIdent LIdent 'where' . ListClassOpDec    (rule 35)

	'('            reduce using rule 38
	';'            reduce using rule 38
	'[]'           reduce using rule 38
	'\\'           reduce using rule 38
	'case'         reduce using rule 38
	'instance'     reduce using rule 38
	L_DTrue        reduce using rule 38
	L_DFalse       reduce using rule 38
	L_LIdent       shift, and enter state 30
			(reduce using rule 38)

	%eof           reduce using rule 38

	LIdent         goto state 56
	ClassOpDec     goto state 57
	ListClassOpDec goto state 124

State 115

	InstDec -> 'instance' UIdent SType 'where' . ListClassOpImp    (rule 36)

	'('            reduce using rule 40
	';'            reduce using rule 40
	'[]'           reduce using rule 40
	'\\'           reduce using rule 40
	'case'         reduce using rule 40
	L_DTrue        reduce using rule 40
	L_DFalse       reduce using rule 40
	L_LIdent       shift, and enter state 30
			(reduce using rule 40)

	%eof           reduce using rule 40

	LIdent         goto state 53
	ClassOpImp     goto state 54
	ListClassOpImp goto state 123

State 116

	InstDec -> 'instance' '<' TyC '>' . '=>' UIdent SType 'where' ListClassOpImp    (rule 37)

	'=>'           shift, and enter state 122


State 117

	Expr -> List .                                      (rule 48)
	Expr -> 'case' Expr 'of' List . '->' Expr ';' List '->' Expr    (rule 49)

	'('            reduce using rule 48
	'->'           shift, and enter state 121
	':'            reduce using rule 48
	'[]'           reduce using rule 48
	'\\'           reduce using rule 48
	'case'         reduce using rule 48
	L_DTrue        reduce using rule 48
	L_DFalse       reduce using rule 48
	L_LIdent       reduce using rule 48


State 118

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> '\\' LIdent '->' Expr .                     (rule 45)
	Expr -> Expr . Expr                                 (rule 47)

	'('            shift, and enter state 39
			(reduce using rule 45)

	')'            reduce using rule 45
	'->'           reduce using rule 45
	':'            shift, and enter state 77
			(reduce using rule 45)

	';'            reduce using rule 45
	'[]'           shift, and enter state 47
			(reduce using rule 45)

	'\\'           shift, and enter state 48
			(reduce using rule 45)

	'case'         shift, and enter state 49
			(reduce using rule 45)

	'of'           reduce using rule 45
	L_DTrue        shift, and enter state 20
			(reduce using rule 45)

	L_DFalse       shift, and enter state 50
			(reduce using rule 45)

	L_LIdent       shift, and enter state 30
			(reduce using rule 45)

	%eof           reduce using rule 45

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 119

	OvType -> '<' ListTyC '>' '=>' . SType              (rule 56)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 120

State 120

	OvType -> '<' ListTyC '>' '=>' SType .              (rule 56)
	SType -> SType . '->' SType                         (rule 63)

	'->'           shift, and enter state 92
	%eof           reduce using rule 56


State 121

	Expr -> 'case' Expr 'of' List '->' . Expr ';' List '->' Expr    (rule 49)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 126
	Expr2          goto state 37
	Expr1          goto state 46

State 122

	InstDec -> 'instance' '<' TyC '>' '=>' . UIdent SType 'where' ListClassOpImp    (rule 37)

	L_UIdent       shift, and enter state 29

	UIdent         goto state 125

State 123

	InstDec -> 'instance' UIdent SType 'where' ListClassOpImp .    (rule 36)

	'('            reduce using rule 36
	';'            reduce using rule 36
	'[]'           reduce using rule 36
	'\\'           reduce using rule 36
	'case'         reduce using rule 36
	L_DTrue        reduce using rule 36
	L_DFalse       reduce using rule 36
	L_LIdent       reduce using rule 36
	%eof           reduce using rule 36


State 124

	ClassDec -> 'class' UIdent LIdent 'where' ListClassOpDec .    (rule 35)

	'('            reduce using rule 35
	';'            reduce using rule 35
	'[]'           reduce using rule 35
	'\\'           reduce using rule 35
	'case'         reduce using rule 35
	'instance'     reduce using rule 35
	L_DTrue        reduce using rule 35
	L_DFalse       reduce using rule 35
	L_LIdent       reduce using rule 35
	%eof           reduce using rule 35


State 125

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent . SType 'where' ListClassOpImp    (rule 37)

	'Bool'         shift, and enter state 27
	'['            shift, and enter state 28
	L_UIdent       shift, and enter state 29
	L_LIdent       shift, and enter state 30

	UIdent         goto state 21
	LIdent         goto state 22
	SType          goto state 128

State 126

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)
	Expr -> 'case' Expr 'of' List '->' Expr . ';' List '->' Expr    (rule 49)

	'('            shift, and enter state 39
	':'            shift, and enter state 77
	';'            shift, and enter state 127
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

State 127

	Expr -> 'case' Expr 'of' List '->' Expr ';' . List '->' Expr    (rule 49)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 130
	Expr           goto state 52
	Expr2          goto state 37
	Expr1          goto state 46

State 128

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType . 'where' ListClassOpImp    (rule 37)
	SType -> SType . '->' SType                         (rule 63)

	'->'           shift, and enter state 92
	'where'        shift, and enter state 129


State 129

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType 'where' . ListClassOpImp    (rule 37)

	'('            reduce using rule 40
	';'            reduce using rule 40
	'[]'           reduce using rule 40
	'\\'           reduce using rule 40
	'case'         reduce using rule 40
	L_DTrue        reduce using rule 40
	L_DFalse       reduce using rule 40
	L_LIdent       shift, and enter state 30
			(reduce using rule 40)

	%eof           reduce using rule 40

	LIdent         goto state 53
	ClassOpImp     goto state 54
	ListClassOpImp goto state 132

State 130

	Expr -> List .                                      (rule 48)
	Expr -> 'case' Expr 'of' List '->' Expr ';' List . '->' Expr    (rule 49)

	'('            reduce using rule 48
	'->'           shift, and enter state 131
	':'            reduce using rule 48
	'[]'           reduce using rule 48
	'\\'           reduce using rule 48
	'case'         reduce using rule 48
	L_DTrue        reduce using rule 48
	L_DFalse       reduce using rule 48
	L_LIdent       reduce using rule 48


State 131

	Expr -> 'case' Expr 'of' List '->' Expr ';' List '->' . Expr    (rule 49)

	'('            shift, and enter state 39
	'[]'           shift, and enter state 47
	'\\'           shift, and enter state 48
	'case'         shift, and enter state 49
	L_DTrue        shift, and enter state 20
	L_DFalse       shift, and enter state 50
	L_LIdent       shift, and enter state 30

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 133
	Expr2          goto state 37
	Expr1          goto state 46

State 132

	InstDec -> 'instance' '<' TyC '>' '=>' UIdent SType 'where' ListClassOpImp .    (rule 37)

	'('            reduce using rule 37
	';'            reduce using rule 37
	'[]'           reduce using rule 37
	'\\'           reduce using rule 37
	'case'         reduce using rule 37
	L_DTrue        reduce using rule 37
	L_DFalse       reduce using rule 37
	L_LIdent       reduce using rule 37
	%eof           reduce using rule 37


State 133

	List -> Expr . ':' Expr                             (rule 43)
	Expr -> Expr . Expr                                 (rule 47)
	Expr -> 'case' Expr 'of' List '->' Expr ';' List '->' Expr .    (rule 49)

	'('            shift, and enter state 39
			(reduce using rule 49)

	')'            reduce using rule 49
	'->'           reduce using rule 49
	':'            shift, and enter state 77
			(reduce using rule 49)

	';'            reduce using rule 49
	'[]'           shift, and enter state 47
			(reduce using rule 49)

	'\\'           shift, and enter state 48
			(reduce using rule 49)

	'case'         shift, and enter state 49
			(reduce using rule 49)

	'of'           reduce using rule 49
	L_DTrue        shift, and enter state 20
			(reduce using rule 49)

	L_DFalse       shift, and enter state 50
			(reduce using rule 49)

	L_LIdent       shift, and enter state 30
			(reduce using rule 49)

	%eof           reduce using rule 49

	DTrue          goto state 41
	DFalse         goto state 42
	LIdent         goto state 43
	List           goto state 44
	Expr           goto state 76
	Expr2          goto state 37
	Expr1          goto state 46

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 67
Number of terminals: 24
Number of non-terminals: 42
Number of states: 134
